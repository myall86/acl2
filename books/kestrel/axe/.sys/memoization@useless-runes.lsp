(TREE-TO-MEMOIZEP)
(TREE-TO-MEMOIZEP-FORWARD-TO-AXE-TREEP)
(TREE-TO-MEMOIZEP-FORWARD-TO-CONSP)
(TREE-TO-MEMOIZEP-FORWARD-TO-NOT-EQUAL-OF-CAR-AND-QUOTE)
(TREE-TO-MEMOIZEP-OF-CONS
 (1938 7 (:DEFINITION PSEUDO-TERMP))
 (785 1 (:REWRITE BOUNDED-AXE-TREEP-WHEN-PSEUDO-TERMP))
 (660 1 (:DEFINITION AXE-TREE-LISTP))
 (505 21 (:DEFINITION LENGTH))
 (486 2 (:REWRITE AXE-TREEP-WHEN-PSEUDO-TERMP))
 (427 35 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (282 270 (:REWRITE DEFAULT-CDR))
 (280 11 (:DEFINITION SYMBOL-LISTP))
 (265 1 (:REWRITE AXE-TREE-LISTP-OF-CDR))
 (208 146 (:REWRITE DEFAULT-CAR))
 (174 174 (:REWRITE USE-ALL-CONSP-2))
 (174 174 (:REWRITE USE-ALL-CONSP))
 (170 64 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 (150 30 (:REWRITE ALL-CONSP-OF-CDR))
 (128 128 (:TYPE-PRESCRIPTION ALL-CONSP))
 (120 60 (:REWRITE DEFAULT-+-2))
 (108 57 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (108 57 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (108 57 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (104 104 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (87 7 (:DEFINITION PSEUDO-TERM-LISTP))
 (70 35 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (66 2 (:REWRITE AXE-TREEP-WHEN-DARGP))
 (64 64 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (64 4 (:REWRITE AXE-TREE-LISTP-WHEN-PSEUDO-TERM-LISTP))
 (60 60 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (60 60 (:REWRITE NORMALIZE-ADDENDS))
 (60 60 (:REWRITE DEFAULT-+-1))
 (57 57 (:REWRITE |(equal (- x) (- y))|))
 (50 50 (:TYPE-PRESCRIPTION PSEUDO-TERM-LISTP))
 (45 4 (:REWRITE AXE-TREE-LISTP-WHEN-ALL-DARGP))
 (44 22 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (42 42 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (35 35 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (35 35 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (34 2 (:REWRITE BOUNDED-AXE-TREE-LISTP-WHEN-PSEUDO-TERM-LISTP))
 (34 2 (:DEFINITION MYQUOTEP))
 (27 1 (:REWRITE AXE-TREEP-OF-CAR))
 (27 1 (:REWRITE AXE-TREE-LISTP-OF-CDR-2))
 (26 1 (:DEFINITION DARGP))
 (25 25 (:TYPE-PRESCRIPTION AXE-TREEP))
 (22 2 (:DEFINITION QUOTEP))
 (21 21 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (21 21 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (20 2 (:REWRITE BOUNDED-AXE-TREE-LISTP-WHEN-ALL-DARGP))
 (17 8 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP))
 (16 16 (:TYPE-PRESCRIPTION ALL-DARGP))
 (16 8 (:REWRITE ALL-DARGP-WHEN-ALL-MYQUOTEP-CHEAP))
 (16 2 (:REWRITE DARGP-WHEN-CONSP-CHEAP))
 (11 11 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (8 8 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (8 8 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE DEFAULT-COERCE-2))
 (8 8 (:REWRITE DEFAULT-COERCE-1))
 (8 8 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE ALL-DARGP-WHEN-BOUNDED-DARG-LISTP))
 (8 1 (:REWRITE USE-ALL-DARGP-FOR-CAR))
 (8 1 (:REWRITE ALL-DARGP-OF-CDR))
 (6 2 (:REWRITE BOUNDED-AXE-TREE-LISTP-WHEN-NOT-CONSP))
 (5 5 (:REWRITE CDR-CONS))
 (3 3 (:REWRITE AXE-TREEP-WHEN-NOT-CONSP-AND-NOT-SYMBOLP-CHEAP))
 (3 3 (:REWRITE AXE-TREEP-WHEN-BOUNDED-AXE-TREEP))
 (2 2 (:TYPE-PRESCRIPTION NATP))
 (2 2 (:TYPE-PRESCRIPTION DARGP))
 (2 2 (:REWRITE USE-ALL-DARGP-2))
 (2 2 (:REWRITE USE-ALL-DARGP))
 (2 2 (:REWRITE MYQUOTEP-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE MYQUOTEP-WHEN-AXE-TREEP))
 (2 2 (:REWRITE DARGP-WHEN-EQUAL-OF-QUOTE-AND-CAR-CHEAP))
 (2 2 (:REWRITE DARGP-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE BOUNDED-AXE-TREE-LISTP-MONO))
 (2 2 (:REWRITE AXE-TREEP-WHEN-SYMBOLP-CHEAP))
 (2 2 (:REWRITE AXE-TREEP-WHEN-EQUAL-OF-CAR-AND-QUOTE-CHEAP))
 (2 1 (:REWRITE DARGP-WHEN-NATP-CHEAP))
 (2 1 (:REWRITE DARGP-WHEN-MYQUOTEP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION MYQUOTEP))
 (1 1 (:REWRITE BOUNDED-AXE-TREEP-MONO))
 (1 1 (:REWRITE AXE-TREEP-OF-CAR-WHEN-BOUNDED-AXE-TREE-LISTP))
 )
(AXE-TREEP-WHEN-TREE-TO-MEMOIZEP)
(TREE-TO-MEMOIZEP-WHEN-AXE-TREEP-AND-BOUNDED-AXE-TREEP-CHEAP
 (236 1 (:REWRITE BOUNDED-AXE-TREEP-WHEN-PSEUDO-TERMP))
 (232 1 (:DEFINITION PSEUDO-TERMP))
 (64 3 (:DEFINITION LENGTH))
 (55 4 (:DEFINITION LEN))
 (54 54 (:TYPE-PRESCRIPTION LEN))
 (39 1 (:REWRITE |(equal (if a b c) x)|))
 (33 3 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (27 1 (:DEFINITION SYMBOL-LISTP))
 (23 17 (:REWRITE DEFAULT-CAR))
 (20 18 (:REWRITE DEFAULT-CDR))
 (20 2 (:DEFINITION TRUE-LISTP))
 (15 15 (:REWRITE USE-ALL-CONSP-2))
 (15 15 (:REWRITE USE-ALL-CONSP))
 (13 5 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 (12 7 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (12 7 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (12 7 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (10 10 (:TYPE-PRESCRIPTION ALL-CONSP))
 (10 2 (:REWRITE ALL-CONSP-OF-CDR))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (8 8 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (8 4 (:REWRITE DEFAULT-+-2))
 (7 7 (:REWRITE |(equal (- x) (- y))|))
 (6 6 (:TYPE-PRESCRIPTION PSEUDO-TERMP))
 (6 3 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (5 5 (:TYPE-PRESCRIPTION SYMBOL-LISTP))
 (5 5 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (3 3 (:TYPE-PRESCRIPTION PSEUDO-TERM-LISTP))
 (3 3 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION AXE-TREEP))
 (2 2 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (2 1 (:REWRITE BOUNDED-AXE-TREEP-WHEN-DARGP-LESS-THAN-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION DARGP-LESS-THAN))
 (1 1 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (1 1 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(TREE-TO-MEMOIZEP-WHEN-AXE-TREEP-AND-BOUNDED-AXE-TREEP-CHEAP-2
 (225 1 (:REWRITE BOUNDED-AXE-TREEP-WHEN-PSEUDO-TERMP))
 (221 1 (:DEFINITION PSEUDO-TERMP))
 (64 3 (:DEFINITION LENGTH))
 (55 4 (:DEFINITION LEN))
 (54 54 (:TYPE-PRESCRIPTION LEN))
 (39 1 (:REWRITE |(equal (if a b c) x)|))
 (33 3 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (27 1 (:DEFINITION SYMBOL-LISTP))
 (23 17 (:REWRITE DEFAULT-CAR))
 (20 2 (:DEFINITION TRUE-LISTP))
 (17 15 (:REWRITE DEFAULT-CDR))
 (13 5 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 (12 12 (:REWRITE USE-ALL-CONSP-2))
 (12 12 (:REWRITE USE-ALL-CONSP))
 (10 10 (:TYPE-PRESCRIPTION ALL-CONSP))
 (10 5 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (10 5 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (10 5 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (10 2 (:REWRITE ALL-CONSP-OF-CDR))
 (8 8 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (8 8 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (8 4 (:REWRITE DEFAULT-+-2))
 (6 6 (:TYPE-PRESCRIPTION PSEUDO-TERMP))
 (6 3 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (5 5 (:TYPE-PRESCRIPTION SYMBOL-LISTP))
 (5 5 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (5 5 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (3 3 (:TYPE-PRESCRIPTION PSEUDO-TERM-LISTP))
 (3 3 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION AXE-TREEP))
 (2 2 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (2 1 (:REWRITE BOUNDED-AXE-TREEP-WHEN-DARGP-LESS-THAN-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION DARGP-LESS-THAN))
 (1 1 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (1 1 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE DEFAULT-COERCE-2))
 (1 1 (:REWRITE DEFAULT-COERCE-1))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(TREES-TO-MEMOIZEP)
(TREES-TO-MEMOIZEP-FORWARD-TO-TRUE-LISTP
 (8 2 (:DEFINITION TRUE-LISTP))
 (6 6 (:REWRITE USE-ALL-CONSP-2))
 (6 6 (:REWRITE USE-ALL-CONSP))
 (6 3 (:REWRITE TREE-TO-MEMOIZEP-WHEN-AXE-TREEP-AND-BOUNDED-AXE-TREEP-CHEAP-2))
 (4 4 (:REWRITE DEFAULT-CDR))
 (3 3 (:TYPE-PRESCRIPTION AXE-TREEP))
 (3 3 (:REWRITE DEFAULT-CAR))
 )
(TREES-TO-MEMOIZEP-OF-CONS
 (10 5 (:REWRITE TREE-TO-MEMOIZEP-WHEN-AXE-TREEP-AND-BOUNDED-AXE-TREEP-CHEAP-2))
 (5 5 (:TYPE-PRESCRIPTION AXE-TREEP))
 (3 3 (:REWRITE DEFAULT-CDR))
 (3 3 (:REWRITE DEFAULT-CAR))
 (2 2 (:REWRITE USE-ALL-CONSP-2))
 (2 2 (:REWRITE USE-ALL-CONSP))
 )
(TREE-TO-MEMOIZEP-OF-CAR
 (2 1 (:REWRITE TREE-TO-MEMOIZEP-WHEN-AXE-TREEP-AND-BOUNDED-AXE-TREEP-CHEAP-2))
 (1 1 (:TYPE-PRESCRIPTION AXE-TREEP))
 (1 1 (:REWRITE DEFAULT-CAR))
 )
(DARGP-OF-LOOKUP-EQUAL-ALT
 (44 2 (:DEFINITION ASSOC-EQUAL))
 (32 8 (:REWRITE DEFAULT-CDR))
 (32 2 (:DEFINITION STRIP-CDRS))
 (28 8 (:REWRITE DEFAULT-CAR))
 (22 1 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP))
 (20 4 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (11 11 (:REWRITE USE-ALL-CONSP-2))
 (11 11 (:REWRITE USE-ALL-CONSP))
 (8 8 (:TYPE-PRESCRIPTION ALL-CONSP))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (4 4 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (4 4 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (4 4 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 (2 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (2 2 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 1 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP-CHEAP))
 (2 1 (:REWRITE ALL-DARGP-WHEN-ALL-MYQUOTEP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (1 1 (:REWRITE ALL-DARGP-WHEN-BOUNDED-DARG-LISTP))
 )
(DARGP-LESS-THAN-OF-LOOKUP-EQUAL-ALT
 (237 52 (:REWRITE DEFAULT-CAR))
 (140 23 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (123 35 (:REWRITE DEFAULT-CDR))
 (56 56 (:TYPE-PRESCRIPTION ALL-CONSP))
 (53 53 (:REWRITE USE-ALL-CONSP-2))
 (53 53 (:REWRITE USE-ALL-CONSP))
 (46 23 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (28 28 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (28 28 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 (25 5 (:REWRITE ALL-CONSP-OF-CDR))
 (23 23 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (23 23 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (20 10 (:REWRITE BOUNDED-DARG-LISTP-WHEN-ALL-MYQUOTEP-CHEAP))
 (13 13 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (13 13 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (13 13 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (13 13 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (13 13 (:REWRITE |(equal (- x) (- y))|))
 (12 6 (:REWRITE DARGP-LESS-THAN-WHEN-NATP-CHEAP))
 (10 10 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (10 10 (:REWRITE BOUNDED-DARG-LISTP-MONOTONE))
 (9 9 (:REWRITE DARGP-LESS-THAN-WHEN-EQUAL-OF-CAR-AND-QUOTE))
 (6 6 (:REWRITE DARGP-LESS-THAN-WHEN-QUOTEP-CHEAP))
 (6 6 (:REWRITE DARGP-LESS-THAN-WHEN-NOT-CONSP-CHEAP))
 (6 6 (:REWRITE DARGP-LESS-THAN-WHEN-CONSP-CHEAP))
 )
(MOD-BOUND-SPECIAL
 (115 23 (:TYPE-PRESCRIPTION MOD-ZERO . 1))
 (115 23 (:TYPE-PRESCRIPTION MOD-POSITIVE . 2))
 (54 54 (:TYPE-PRESCRIPTION NOT-INTEGERP-4B))
 (54 54 (:TYPE-PRESCRIPTION NOT-INTEGERP-3B))
 (54 54 (:TYPE-PRESCRIPTION NOT-INTEGERP-2B))
 (54 54 (:TYPE-PRESCRIPTION NOT-INTEGERP-1B))
 (37 1 (:LINEAR MOD-BOUNDS-3))
 (36 3 (:REWRITE INTEGERP-WHEN-NATP))
 (33 1 (:REWRITE CANCEL-MOD-+))
 (28 1 (:REWRITE MOD-ZERO . 2))
 (23 23 (:TYPE-PRESCRIPTION MOD-ZERO . 2))
 (23 23 (:TYPE-PRESCRIPTION MOD-POSITIVE . 1))
 (23 23 (:TYPE-PRESCRIPTION MOD-NONPOSITIVE))
 (23 23 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 2))
 (23 23 (:TYPE-PRESCRIPTION MOD-NEGATIVE . 1))
 (15 1 (:REWRITE MOD-X-Y-=-X . 3))
 (13 13 (:TYPE-PRESCRIPTION NOT-INTEGERP-4A))
 (13 13 (:TYPE-PRESCRIPTION NOT-INTEGERP-3A))
 (13 13 (:TYPE-PRESCRIPTION NOT-INTEGERP-2A))
 (13 13 (:TYPE-PRESCRIPTION NOT-INTEGERP-1A))
 (12 3 (:REWRITE |(* y x)|))
 (12 1 (:REWRITE MOD-X-Y-=-X . 4))
 (7 1 (:REWRITE MOD-ZERO . 3))
 (6 6 (:TYPE-PRESCRIPTION NATP))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (3 3 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:REWRITE DEFAULT-*-2))
 (3 3 (:REWRITE DEFAULT-*-1))
 (3 3 (:REWRITE |(integerp (* c x))|))
 (3 3 (:META META-INTEGERP-CORRECT))
 (2 2 (:REWRITE SIMPLIFY-SUMS-<))
 (2 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (2 2 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 2 (:REWRITE MOD-COMPLETION))
 (2 2 (:REWRITE DEFAULT-<-2))
 (2 2 (:REWRITE DEFAULT-<-1))
 (2 2 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:LINEAR MOD-BOUNDS-2))
 (2 1 (:REWRITE <=-OF-0-WHEN-0-NATP))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-A+AB-=-0))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-A+AB-<-0))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-A+AB))
 (1 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (1 1 (:REWRITE SIMPLIFY-MOD-+-MOD-WEAK))
 (1 1 (:REWRITE SIMPLIFY-MOD-+-MINUS-MOD))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE MOD-X-Y-=-X . 2))
 (1 1 (:REWRITE MOD-NEG))
 (1 1 (:REWRITE MOD-MINUS-2))
 (1 1 (:REWRITE MOD-CANCEL-*))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(< 0 (- x))|))
 (1 1 (:REWRITE |(< (- x) 0)|))
 )
(SUM-OF-NODENUMS-AUX
 (9 9 (:TYPE-PRESCRIPTION LOGAND-NEGATIVE-TYPE))
 )
(FLAG-SUM-OF-NODENUMS-AUX
 (1028 34 (:DEFINITION INTEGER-ABS))
 (442 147 (:REWRITE DEFAULT-+-2))
 (323 51 (:REWRITE <=-OF-0-WHEN-0-NATP))
 (323 17 (:REWRITE |(+ (if a b c) x)|))
 (242 17 (:REWRITE NUMERATOR-NEGATIVE))
 (238 17 (:DEFINITION LENGTH))
 (194 147 (:REWRITE DEFAULT-+-1))
 (170 17 (:DEFINITION LEN))
 (147 147 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (119 119 (:TYPE-PRESCRIPTION NUMERATOR-POSITIVE . 2))
 (119 119 (:TYPE-PRESCRIPTION NUMERATOR-POSITIVE . 1))
 (119 119 (:TYPE-PRESCRIPTION NUMERATOR-NEGATIVE . 2))
 (119 119 (:TYPE-PRESCRIPTION NUMERATOR-NEGATIVE . 1))
 (114 40 (:REWRITE DEFAULT-UNARY-MINUS))
 (102 102 (:TYPE-PRESCRIPTION NATP))
 (82 66 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (70 46 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (70 46 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (66 66 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (63 63 (:REWRITE |(< (- x) (- y))|))
 (53 53 (:REWRITE |(+ c (+ d x))|))
 (52 43 (:REWRITE DEFAULT-<-2))
 (51 51 (:REWRITE |(< (- x) 0)|))
 (51 17 (:REWRITE INTEGERP-WHEN-NATP))
 (49 43 (:REWRITE DEFAULT-<-1))
 (48 48 (:REWRITE DEFAULT-CDR))
 (46 46 (:REWRITE FOLD-CONSTS-IN-+))
 (43 43 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (41 41 (:REWRITE USE-ALL-CONSP-2))
 (41 41 (:REWRITE USE-ALL-CONSP))
 (34 34 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-A+AB-<-0))
 (34 34 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (34 34 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (31 31 (:REWRITE DEFAULT-CAR))
 (20 4 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (20 2 (:TYPE-PRESCRIPTION RETURN-LAST))
 (17 17 (:TYPE-PRESCRIPTION LEN))
 (17 17 (:REWRITE REDUCE-INTEGERP-+))
 (17 17 (:REWRITE INTEGERP==>NUMERATOR-=-X))
 (17 17 (:REWRITE INTEGERP==>DENOMINATOR-=-1))
 (17 17 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (17 17 (:REWRITE INTEGERP-MINUS-X))
 (17 17 (:REWRITE DEFAULT-REALPART))
 (17 17 (:REWRITE DEFAULT-NUMERATOR))
 (17 17 (:REWRITE DEFAULT-IMAGPART))
 (17 17 (:REWRITE DEFAULT-DENOMINATOR))
 (17 17 (:REWRITE DEFAULT-COERCE-2))
 (17 17 (:REWRITE DEFAULT-COERCE-1))
 (17 17 (:META META-INTEGERP-CORRECT))
 (10 10 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (10 10 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (10 10 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (10 10 (:REWRITE |(equal (- x) (- y))|))
 (8 8 (:TYPE-PRESCRIPTION ALL-CONSP))
 (8 8 (:REWRITE NOT-<-OF-CAR-WHEN-BOUNDED-DARG-LISTP-2))
 (8 4 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION LOGAND-NEGATIVE-TYPE))
 (6 3 (:REWRITE |(< d (+ c x y))|))
 (5 5 (:REWRITE USE-ALL-CDRS-RATIONALP-2))
 (5 5 (:REWRITE USE-ALL-CDRS-RATIONALP))
 (4 4 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (4 4 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (4 4 (:REWRITE INTEGERP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (4 4 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 (2 2 (:TYPE-PRESCRIPTION THROW-NONEXEC-ERROR))
 )
(FLAG::FLAG-EQUIV-LEMMA)
(FLAG-SUM-OF-NODENUMS-AUX-EQUIVALENCES)
(FLAG-LEMMA-FOR-NATP-OF-SUM-OF-NODENUMS-AUX-LST
 (4448 39 (:REWRITE AXE-TREE-LISTP-WHEN-PSEUDO-TERM-LISTP))
 (4313 52 (:DEFINITION PSEUDO-TERM-LISTP))
 (3094 141 (:DEFINITION LENGTH))
 (3039 214 (:DEFINITION LEN))
 (2425 221 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (1791 47 (:REWRITE |(equal (if a b c) x)|))
 (1537 54 (:DEFINITION SYMBOL-LISTP))
 (1365 1013 (:REWRITE DEFAULT-CAR))
 (1304 1168 (:REWRITE DEFAULT-CDR))
 (1039 344 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 (803 803 (:REWRITE USE-ALL-CONSP-2))
 (803 803 (:REWRITE USE-ALL-CONSP))
 (718 29 (:REWRITE AXE-TREEP-WHEN-DARGP))
 (696 133 (:REWRITE ALL-CONSP-OF-CDR))
 (688 688 (:TYPE-PRESCRIPTION ALL-CONSP))
 (544 283 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (537 283 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (537 283 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (442 221 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (434 220 (:REWRITE DEFAULT-+-2))
 (428 428 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (350 350 (:TYPE-PRESCRIPTION PSEUDO-TERM-LISTP))
 (344 344 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (326 326 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (285 11 (:DEFINITION DARGP))
 (283 283 (:REWRITE |(equal (- x) (- y))|))
 (282 147 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (221 221 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (221 221 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (220 220 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (220 220 (:REWRITE NORMALIZE-ADDENDS))
 (220 220 (:REWRITE DEFAULT-+-1))
 (201 201 (:TYPE-PRESCRIPTION AXE-TREEP))
 (190 29 (:REWRITE ALL-DARGP-OF-CDR))
 (151 151 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (148 74 (:REWRITE ALL-DARGP-WHEN-ALL-MYQUOTEP-CHEAP))
 (147 147 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (136 22 (:REWRITE DARGP-WHEN-CONSP-CHEAP))
 (125 73 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP))
 (115 13 (:REWRITE USE-ALL-DARGP-FOR-CAR))
 (80 80 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (74 74 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (74 74 (:REWRITE ALL-DARGP-WHEN-BOUNDED-DARG-LISTP))
 (47 47 (:REWRITE DEFAULT-COERCE-2))
 (47 47 (:REWRITE DEFAULT-COERCE-1))
 (45 45 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (33 33 (:REWRITE AXE-TREEP-WHEN-BOUNDED-AXE-TREEP))
 (28 28 (:REWRITE AXE-TREEP-WHEN-SYMBOLP-CHEAP))
 (23 23 (:REWRITE MYQUOTEP-WHEN-DARGP-LESS-THAN))
 (23 23 (:REWRITE MYQUOTEP-WHEN-AXE-TREEP))
 (22 22 (:TYPE-PRESCRIPTION DARGP))
 (22 22 (:REWRITE USE-ALL-DARGP-2))
 (22 22 (:REWRITE USE-ALL-DARGP))
 (22 22 (:REWRITE DARGP-WHEN-EQUAL-OF-QUOTE-AND-CAR-CHEAP))
 (22 22 (:REWRITE DARGP-WHEN-DARGP-LESS-THAN))
 (22 11 (:REWRITE DARGP-WHEN-MYQUOTEP-CHEAP))
 (21 11 (:REWRITE DARGP-WHEN-NATP-CHEAP))
 (16 16 (:REWRITE AXE-TREEP-OF-CAR-WHEN-BOUNDED-AXE-TREE-LISTP))
 (11 11 (:TYPE-PRESCRIPTION MYQUOTEP))
 (6 6 (:REWRITE LOGAND-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (6 6 (:REWRITE LOGAND-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION LOGAND-NEGATIVE-TYPE))
 )
(NATP-OF-SUM-OF-NODENUMS-AUX-LST)
(NATP-OF-SUM-OF-NODENUMS-AUX)
(FLAG-LEMMA-FOR-<=-OF-SUM-OF-NODENUMS-AUX-LST
 (4448 39 (:REWRITE AXE-TREE-LISTP-WHEN-PSEUDO-TERM-LISTP))
 (4313 52 (:DEFINITION PSEUDO-TERM-LISTP))
 (3094 141 (:DEFINITION LENGTH))
 (3039 214 (:DEFINITION LEN))
 (2430 222 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (1791 47 (:REWRITE |(equal (if a b c) x)|))
 (1537 54 (:DEFINITION SYMBOL-LISTP))
 (1367 1015 (:REWRITE DEFAULT-CAR))
 (1305 1169 (:REWRITE DEFAULT-CDR))
 (1040 345 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 (804 804 (:REWRITE USE-ALL-CONSP-2))
 (804 804 (:REWRITE USE-ALL-CONSP))
 (718 29 (:REWRITE AXE-TREEP-WHEN-DARGP))
 (696 133 (:REWRITE ALL-CONSP-OF-CDR))
 (690 690 (:TYPE-PRESCRIPTION ALL-CONSP))
 (545 284 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (538 284 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (538 284 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (444 222 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (435 221 (:REWRITE DEFAULT-+-2))
 (428 428 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (350 350 (:TYPE-PRESCRIPTION PSEUDO-TERM-LISTP))
 (345 345 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (326 326 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (285 11 (:DEFINITION DARGP))
 (284 284 (:REWRITE |(equal (- x) (- y))|))
 (284 148 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (222 222 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (222 222 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (221 221 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (221 221 (:REWRITE NORMALIZE-ADDENDS))
 (221 221 (:REWRITE DEFAULT-+-1))
 (190 29 (:REWRITE ALL-DARGP-OF-CDR))
 (151 151 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (148 74 (:REWRITE ALL-DARGP-WHEN-ALL-MYQUOTEP-CHEAP))
 (147 147 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (136 22 (:REWRITE DARGP-WHEN-CONSP-CHEAP))
 (125 73 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP))
 (115 13 (:REWRITE USE-ALL-DARGP-FOR-CAR))
 (80 80 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (74 74 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (74 74 (:REWRITE ALL-DARGP-WHEN-BOUNDED-DARG-LISTP))
 (47 47 (:REWRITE DEFAULT-COERCE-2))
 (47 47 (:REWRITE DEFAULT-COERCE-1))
 (46 46 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (34 34 (:REWRITE AXE-TREEP-WHEN-BOUNDED-AXE-TREEP))
 (28 28 (:REWRITE AXE-TREEP-WHEN-SYMBOLP-CHEAP))
 (23 23 (:REWRITE MYQUOTEP-WHEN-DARGP-LESS-THAN))
 (23 23 (:REWRITE MYQUOTEP-WHEN-AXE-TREEP))
 (22 22 (:TYPE-PRESCRIPTION DARGP))
 (22 22 (:REWRITE USE-ALL-DARGP-2))
 (22 22 (:REWRITE USE-ALL-DARGP))
 (22 22 (:REWRITE DARGP-WHEN-EQUAL-OF-QUOTE-AND-CAR-CHEAP))
 (22 22 (:REWRITE DARGP-WHEN-DARGP-LESS-THAN))
 (22 11 (:REWRITE DARGP-WHEN-MYQUOTEP-CHEAP))
 (21 21 (:TYPE-PRESCRIPTION NATP))
 (21 11 (:REWRITE DARGP-WHEN-NATP-CHEAP))
 (19 19 (:REWRITE SIMPLIFY-SUMS-<))
 (19 19 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (19 19 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (19 19 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (19 19 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (19 19 (:REWRITE DEFAULT-<-2))
 (19 19 (:REWRITE DEFAULT-<-1))
 (19 19 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (19 19 (:REWRITE |(< (- x) (- y))|))
 (17 17 (:REWRITE AXE-TREEP-OF-CAR-WHEN-BOUNDED-AXE-TREE-LISTP))
 (11 11 (:TYPE-PRESCRIPTION MYQUOTEP))
 (7 7 (:REWRITE LOGAND-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (7 7 (:REWRITE LOGAND-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 (1 1 (:REWRITE <=-OF-LOGAND-SAME-WHEN-NEGATIVE))
 )
(<=-OF-SUM-OF-NODENUMS-AUX-LST)
(<=-OF-SUM-OF-NODENUMS-AUX)
(SUM-OF-NODENUMS-AUX
 (2630 12 (:DEFINITION PSEUDO-TERMP))
 (2429 12 (:REWRITE BOUNDED-AXE-TREEP-WHEN-PSEUDO-TERMP))
 (903 5 (:REWRITE BOUNDED-AXE-TREE-LISTP-OF-CDR))
 (711 33 (:DEFINITION LENGTH))
 (612 44 (:DEFINITION LEN))
 (594 594 (:TYPE-PRESCRIPTION LEN))
 (438 15 (:REWRITE BOUNDED-AXE-TREE-LISTP-WHEN-PSEUDO-TERM-LISTP))
 (429 11 (:REWRITE |(equal (if a b c) x)|))
 (422 42 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (391 12 (:DEFINITION PSEUDO-TERM-LISTP))
 (304 11 (:DEFINITION SYMBOL-LISTP))
 (269 203 (:REWRITE DEFAULT-CAR))
 (241 219 (:REWRITE DEFAULT-CDR))
 (223 22 (:DEFINITION TRUE-LISTP))
 (166 64 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 (155 155 (:REWRITE USE-ALL-CONSP-2))
 (155 155 (:REWRITE USE-ALL-CONSP))
 (128 128 (:TYPE-PRESCRIPTION ALL-CONSP))
 (125 15 (:REWRITE BOUNDED-AXE-TREE-LISTP-WHEN-ALL-DARGP))
 (112 57 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (112 57 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (112 57 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (110 22 (:REWRITE ALL-CONSP-OF-CDR))
 (103 103 (:TYPE-PRESCRIPTION PSEUDO-TERMP))
 (90 90 (:TYPE-PRESCRIPTION PSEUDO-TERM-LISTP))
 (90 46 (:REWRITE DEFAULT-+-2))
 (88 88 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (86 86 (:TYPE-PRESCRIPTION TRUE-LISTP))
 (84 42 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (64 64 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (57 57 (:REWRITE |(equal (- x) (- y))|))
 (57 31 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (55 55 (:TYPE-PRESCRIPTION SYMBOL-LISTP))
 (54 2 (:DEFINITION SUM-OF-NODENUMS-AUX))
 (46 46 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (46 46 (:REWRITE NORMALIZE-ADDENDS))
 (46 46 (:REWRITE DEFAULT-+-1))
 (42 42 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (42 42 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (38 7 (:REWRITE BOUNDED-AXE-TREEP-OF-CAR))
 (35 35 (:REWRITE TERMP-IMPLIES-PSEUDO-TERMP))
 (35 35 (:REWRITE TERM-LISTP-IMPLIES-PSEUDO-TERM-LISTP))
 (28 28 (:TYPE-PRESCRIPTION ALL-DARGP))
 (28 14 (:REWRITE ALL-DARGP-WHEN-ALL-MYQUOTEP-CHEAP))
 (24 12 (:REWRITE BOUNDED-AXE-TREEP-WHEN-DARGP-LESS-THAN-CHEAP))
 (24 3 (:REWRITE ALL-DARGP-OF-CDR))
 (23 14 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP))
 (21 15 (:REWRITE BOUNDED-AXE-TREE-LISTP-WHEN-NOT-CONSP))
 (18 18 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-BOUNDED-DARG-LISTP))
 (15 15 (:REWRITE BOUNDED-AXE-TREE-LISTP-MONO))
 (14 14 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (14 14 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP-CHEAP))
 (14 14 (:REWRITE ALL-DARGP-WHEN-BOUNDED-DARG-LISTP))
 (12 12 (:TYPE-PRESCRIPTION DARGP-LESS-THAN))
 (12 12 (:REWRITE BOUNDED-AXE-TREEP-MONO))
 (11 11 (:REWRITE DEFAULT-COERCE-2))
 (11 11 (:REWRITE DEFAULT-COERCE-1))
 (10 2 (:REWRITE |(+ y x)|))
 (9 9 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (7 7 (:REWRITE SIMPLIFY-SUMS-<))
 (7 7 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (7 7 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (7 7 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (7 7 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (7 7 (:REWRITE DEFAULT-<-2))
 (7 7 (:REWRITE DEFAULT-<-1))
 (7 7 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (7 7 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:REWRITE LOGAND-WHEN-NOT-INTEGERP-ARG2-CHEAP))
 (2 2 (:REWRITE LOGAND-WHEN-NOT-INTEGERP-ARG1-CHEAP))
 )
(SUM-OF-NODENUMS)
(NATP-OF-SUM-OF-NODENUMS)
(NATP-OF-SUM-OF-NODENUMS-TYPE)
(SUM-OF-NODENUMS-BOUND)
(MEMO-ALISTP)
(MEMO-ALISTP-OF-CONS-OF-CONS
 (62 22 (:REWRITE DEFAULT-CDR))
 (46 3 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP))
 (40 8 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (36 16 (:REWRITE DEFAULT-CAR))
 (22 22 (:REWRITE USE-ALL-CONSP-2))
 (22 22 (:REWRITE USE-ALL-CONSP))
 (16 16 (:TYPE-PRESCRIPTION ALL-CONSP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (10 10 (:TYPE-PRESCRIPTION STRIP-CDRS))
 (10 2 (:REWRITE ALISTP-OF-CDR))
 (8 8 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (8 8 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 (8 8 (:REWRITE ALISTP-WHEN-BOUNDED-NATP-ALISTP))
 (6 3 (:REWRITE ALL-DARGP-WHEN-NOT-CONSP-CHEAP))
 (6 3 (:REWRITE ALL-DARGP-WHEN-ALL-MYQUOTEP-CHEAP))
 (4 2 (:REWRITE TREE-TO-MEMOIZEP-WHEN-AXE-TREEP-AND-BOUNDED-AXE-TREEP-CHEAP-2))
 (4 2 (:REWRITE DARGP-WHEN-NATP-CHEAP))
 (4 2 (:REWRITE DARGP-WHEN-MYQUOTEP-CHEAP))
 (3 3 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (3 3 (:REWRITE ALL-DARGP-WHEN-BOUNDED-DARG-LISTP))
 (2 2 (:TYPE-PRESCRIPTION NATP))
 (2 2 (:TYPE-PRESCRIPTION MYQUOTEP))
 (2 2 (:TYPE-PRESCRIPTION AXE-TREEP))
 (2 2 (:REWRITE USE-ALL-DARGP-2))
 (2 2 (:REWRITE USE-ALL-DARGP))
 (2 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (2 2 (:REWRITE MYQUOTEP-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE MYQUOTEP-WHEN-AXE-TREEP))
 (2 2 (:REWRITE DARGP-WHEN-EQUAL-OF-QUOTE-AND-CAR-CHEAP))
 (2 2 (:REWRITE DARGP-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE DARGP-WHEN-CONSP-CHEAP))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 )
(ALISTP-WHEN-MEMO-ALISTP)
(ALL-DARGP-OF-STRIP-CDRS-WHEN-MEMO-ALISTP)
(TREES-TO-MEMOIZEP-OF-STRIP-CARS-WHEN-MEMO-ALISTP)
(ARRAY-OF-MEMO-ALISTSP-AUX
 (139 139 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (6 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (5 3 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (4 3 (:REWRITE DEFAULT-+-2))
 (4 2 (:REWRITE SIMPLIFY-SUMS-<))
 (4 2 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (3 3 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (3 3 (:REWRITE NORMALIZE-ADDENDS))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-<-1))
 (2 2 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (2 1 (:REWRITE |(< d (+ c x))|))
 (1 1 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (1 1 (:REWRITE |(< (+ c x) d)|))
 )
(ARRAY-OF-MEMO-ALISTSP-AUX-OF-MINUS1)
(ARRAY-OF-MEMO-ALISTSP-AUX-OF-0
 (8 2 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (2 2 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (2 2 (:TYPE-PRESCRIPTION ARRAY1P))
 )
(ARRAY-OF-MEMO-ALISTSP-AUX-MONOTONE
 (44 11 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (26 12 (:REWRITE INTEGERP-WHEN-NATP))
 (22 11 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (12 12 (:REWRITE REDUCE-INTEGERP-+))
 (12 12 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (12 12 (:REWRITE INTEGERP-MINUS-X))
 (12 12 (:META META-INTEGERP-CORRECT))
 (11 11 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (11 11 (:TYPE-PRESCRIPTION ARRAY1P))
 (7 7 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (7 7 (:REWRITE NORMALIZE-ADDENDS))
 (7 7 (:REWRITE DEFAULT-+-2))
 (7 7 (:REWRITE DEFAULT-+-1))
 (6 6 (:REWRITE SIMPLIFY-SUMS-<))
 (6 6 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (6 6 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (6 6 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (6 6 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (6 6 (:REWRITE |(< (- x) (- y))|))
 )
(TYPE-OF-AREF1-WHEN-ARRAY-OF-MEMO-ALISTSP-AUX
 (28 7 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (14 7 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (7 7 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (7 7 (:TYPE-PRESCRIPTION ARRAY1P))
 (3 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (3 3 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (3 3 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (3 3 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (3 3 (:REWRITE NORMALIZE-ADDENDS))
 (3 3 (:REWRITE DEFAULT-+-2))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE ARRAY-OF-MEMO-ALISTSP-AUX-MONOTONE))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:REWRITE SIMPLIFY-SUMS-<))
 (2 2 (:REWRITE DEFAULT-<-2))
 (2 2 (:REWRITE DEFAULT-<-1))
 (2 2 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (1 1 (:REWRITE |(< d (+ c x))|))
 (1 1 (:REWRITE |(< (+ c x) d)|))
 )
(ARRAY-OF-MEMO-ALISTSP-AUX-OF-ASET1-TOO-HIGH
 (169 169 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (43 14 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (22 8 (:REWRITE INTEGERP-WHEN-NATP))
 (20 10 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (15 10 (:REWRITE SIMPLIFY-SUMS-<))
 (15 10 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (15 10 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (15 10 (:REWRITE DEFAULT-<-2))
 (14 14 (:REWRITE ARRAY-OF-MEMO-ALISTSP-AUX-MONOTONE))
 (10 10 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (10 10 (:REWRITE DEFAULT-<-1))
 (10 10 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (10 10 (:REWRITE |(< (- x) (- y))|))
 (10 10 (:LINEAR ARRAY2P-LINEAR))
 (9 6 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (9 6 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (9 6 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (8 8 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-MEMO-ALISTSP-AUX))
 (8 8 (:REWRITE REDUCE-INTEGERP-+))
 (8 8 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (8 8 (:REWRITE INTEGERP-MINUS-X))
 (8 8 (:META META-INTEGERP-CORRECT))
 (6 6 (:REWRITE |(equal (- x) (- y))|))
 (6 2 (:REWRITE AREF1-OF-ASET1-DIFF))
 (5 5 (:TYPE-PRESCRIPTION ASET1))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE DEFAULT-+-2))
 (4 4 (:REWRITE DEFAULT-+-1))
 )
(ARRAY-OF-MEMO-ALISTSP-AUX-OF-ASET1
 (209 209 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (25 10 (:REWRITE SIMPLIFY-SUMS-<))
 (18 13 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (16 13 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (16 8 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (15 11 (:REWRITE NORMALIZE-ADDENDS))
 (13 13 (:REWRITE |(< (- x) (- y))|))
 (13 3 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (12 9 (:REWRITE DEFAULT-<-2))
 (10 10 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (9 9 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (9 9 (:REWRITE DEFAULT-<-1))
 (9 9 (:REWRITE DEFAULT-+-2))
 (9 9 (:REWRITE DEFAULT-+-1))
 (9 9 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (8 2 (:REWRITE |(+ y x)|))
 (6 6 (:LINEAR ARRAY2P-LINEAR))
 (5 1 (:REWRITE |(+ y (+ x z))|))
 (4 4 (:REWRITE |(< d (+ c x))|))
 (4 2 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (3 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (3 3 (:REWRITE |(< (+ c x) d)|))
 (2 2 (:TYPE-PRESCRIPTION ASET1))
 (2 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(equal (+ c x) d)|))
 (2 2 (:REWRITE |(+ x (- x))|))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE INTEGERP-WHEN-NATP))
 (1 1 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(ARRAY-OF-MEMO-ALISTSP-AUX-OF-ASET1-AT-END
 (55 6 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (36 5 (:REWRITE ARRAY-OF-MEMO-ALISTSP-AUX-MONOTONE))
 (34 3 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-MEMO-ALISTSP-AUX))
 (32 32 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (32 7 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (29 4 (:REWRITE SIMPLIFY-SUMS-<))
 (29 1 (:REWRITE ARRAY-OF-MEMO-ALISTSP-AUX-OF-ASET1-TOO-HIGH))
 (18 10 (:REWRITE NORMALIZE-ADDENDS))
 (16 4 (:REWRITE |(+ y x)|))
 (11 5 (:REWRITE |(+ c (+ d x))|))
 (10 2 (:REWRITE |(+ y (+ x z))|))
 (9 7 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (8 4 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (8 3 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (7 7 (:REWRITE |(< (- x) (- y))|))
 (6 6 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (6 6 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (6 6 (:REWRITE DEFAULT-+-2))
 (6 6 (:REWRITE DEFAULT-+-1))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE |(+ x (- x))|))
 (4 2 (:REWRITE |(* y x)|))
 (3 2 (:REWRITE DEFAULT-<-2))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (2 2 (:REWRITE DEFAULT-UNARY-/))
 (2 2 (:REWRITE DEFAULT-<-1))
 (2 2 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (2 2 (:REWRITE |(< d (+ c x))|))
 (2 2 (:REWRITE |(< (+ c x) d)|))
 (2 2 (:REWRITE |(+ 0 x)|))
 (2 2 (:REWRITE |(* a (/ a))|))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (1 1 (:TYPE-PRESCRIPTION ASET1))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-A+AB-=-0))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-A+AB))
 (1 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(ARRAY-OF-MEMO-ALISTSP-AUX-OF-COMPRESS1
 (26 26 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (23 9 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (14 14 (:REWRITE ARRAY-OF-MEMO-ALISTSP-AUX-MONOTONE))
 (14 7 (:REWRITE DEFAULT-<-2))
 (11 7 (:REWRITE SIMPLIFY-SUMS-<))
 (11 7 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (11 7 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (10 10 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-MEMO-ALISTSP-AUX))
 (10 10 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (10 10 (:LINEAR ARRAY2P-LINEAR))
 (7 7 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (7 7 (:REWRITE DEFAULT-<-1))
 (7 7 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (7 7 (:REWRITE |(< (- x) (- y))|))
 (6 3 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (6 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (6 3 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE DEFAULT-+-2))
 (4 4 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 )
(ARRAY-OF-MEMO-ALISTSP-AUX-OF-CONS-OF-CONS-OF-HEADER
 (52 4 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (44 13 (:REWRITE ARRAY-OF-MEMO-ALISTSP-AUX-MONOTONE))
 (40 10 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (26 2 (:REWRITE SIMPLIFY-SUMS-<))
 (24 4 (:REWRITE DEFAULT-CDR))
 (24 4 (:REWRITE DEFAULT-CAR))
 (20 10 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (18 10 (:REWRITE NORMALIZE-ADDENDS))
 (16 4 (:REWRITE |(+ y x)|))
 (10 10 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (10 10 (:TYPE-PRESCRIPTION ARRAY1P))
 (10 2 (:REWRITE |(+ y (+ x z))|))
 (8 8 (:REWRITE USE-ALL-CONSP-2))
 (8 8 (:REWRITE USE-ALL-CONSP))
 (8 4 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (6 6 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (6 6 (:REWRITE DEFAULT-+-2))
 (6 6 (:REWRITE DEFAULT-+-1))
 (6 4 (:REWRITE |(+ c (+ d x))|))
 (4 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (4 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (4 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:REWRITE |(+ x (- x))|))
 (2 2 (:REWRITE |(< d (+ c x))|))
 (2 2 (:REWRITE |(< (+ c x) d)|))
 (2 2 (:REWRITE |(+ 0 x)|))
 )
(ARRAY-OF-MEMO-ALISTSP-AUX-OF-CONS-OF-CONS-OF-HEADER-IRREL
 (76 19 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (38 19 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (36 6 (:REWRITE DEFAULT-CDR))
 (36 6 (:REWRITE DEFAULT-CAR))
 (25 25 (:REWRITE ARRAY-OF-MEMO-ALISTSP-AUX-MONOTONE))
 (19 19 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (19 19 (:TYPE-PRESCRIPTION ARRAY1P))
 (19 19 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-MEMO-ALISTSP-AUX))
 (14 10 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (14 10 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (14 10 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (12 12 (:REWRITE USE-ALL-CONSP-2))
 (12 12 (:REWRITE USE-ALL-CONSP))
 (10 10 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (10 10 (:REWRITE NORMALIZE-ADDENDS))
 (10 10 (:REWRITE DEFAULT-+-2))
 (10 10 (:REWRITE DEFAULT-+-1))
 (10 10 (:REWRITE |(equal (- x) (- y))|))
 )
(ENSURE-DEFAULT-SATISFIES-PRED)
(<-OF-IF-ARG1-ALT)
(ARRAY-OF-MEMO-ALISTSP-AUX-OF-MAKE-EMPTY-ARRAY-WITH-DEFAULT
 (41 17 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (38 7 (:REWRITE ARRAY-OF-MEMO-ALISTSP-AUX-MONOTONE))
 (35 7 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (28 16 (:REWRITE SIMPLIFY-SUMS-<))
 (21 7 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (17 17 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (17 17 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (17 17 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (17 17 (:REWRITE |(< (- x) (- y))|))
 (15 15 (:REWRITE DEFAULT-<-2))
 (15 15 (:REWRITE DEFAULT-<-1))
 (15 15 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (15 5 (:REWRITE INTEGERP-WHEN-NATP))
 (12 8 (:REWRITE NORMALIZE-ADDENDS))
 (8 2 (:REWRITE |(+ y x)|))
 (7 7 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (7 7 (:TYPE-PRESCRIPTION MAKE-EMPTY-ARRAY-WITH-DEFAULT))
 (7 7 (:TYPE-PRESCRIPTION ARRAY1P))
 (6 6 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (6 6 (:REWRITE DEFAULT-+-2))
 (6 6 (:REWRITE DEFAULT-+-1))
 (5 5 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-A+AB))
 (5 5 (:REWRITE REDUCE-INTEGERP-+))
 (5 5 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (5 5 (:REWRITE INTEGERP-MINUS-X))
 (5 5 (:REWRITE |(< 0 (- x))|))
 (5 5 (:META META-INTEGERP-CORRECT))
 (5 1 (:REWRITE |(+ y (+ x z))|))
 (4 2 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (3 2 (:REWRITE |(+ c (+ d x))|))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(+ x (- x))|))
 (1 1 (:REWRITE |(< d (+ c x))|))
 (1 1 (:REWRITE |(< (+ c x) d)|))
 (1 1 (:REWRITE |(+ 0 x)|))
 )
(ARRAY-OF-MEMO-ALISTSP-AUX-BEYOND-LENGTH
 (359 14 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-MEMO-ALISTSP-AUX))
 (73 73 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (70 37 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (58 20 (:REWRITE SIMPLIFY-SUMS-<))
 (56 38 (:REWRITE DEFAULT-+-2))
 (50 42 (:REWRITE NORMALIZE-ADDENDS))
 (43 38 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (40 17 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (38 38 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (38 38 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (38 38 (:REWRITE DEFAULT-+-1))
 (37 37 (:REWRITE |(< (- x) (- y))|))
 (32 18 (:REWRITE DEFAULT-<-1))
 (28 18 (:REWRITE |(< (+ c x) d)|))
 (27 3 (:REWRITE |(< (+ d x) (+ c y))|))
 (22 18 (:REWRITE DEFAULT-<-2))
 (20 19 (:REWRITE |(< d (+ c x))|))
 (18 18 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (16 16 (:LINEAR ARRAY2P-LINEAR))
 (16 4 (:REWRITE |(+ y x)|))
 (10 2 (:REWRITE |(+ y (+ x z))|))
 (8 4 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE |(+ x (- x))|))
 (4 2 (:REWRITE |(< (+ c x) (+ d y))|))
 )
(ARRAY-OF-MEMO-ALISTSP-AUX-OF-EXPAND-ARRAY-HELPER
 (4888 4736 (:REWRITE DEFAULT-CDR))
 (2683 2683 (:REWRITE DEFAULT-CAR))
 (2580 2580 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (1015 660 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (943 577 (:REWRITE DEFAULT-+-2))
 (890 513 (:REWRITE SIMPLIFY-SUMS-<))
 (717 497 (:REWRITE DEFAULT-<-2))
 (674 91 (:REWRITE |(< (+ d x) (+ c y))|))
 (673 609 (:REWRITE NORMALIZE-ADDENDS))
 (660 660 (:REWRITE |(< (- x) (- y))|))
 (577 577 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (577 577 (:REWRITE DEFAULT-+-1))
 (559 226 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (539 497 (:REWRITE DEFAULT-<-1))
 (497 497 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (282 179 (:REWRITE DEFAULT-*-2))
 (228 19 (:DEFINITION ASSOC-KEYWORD))
 (179 179 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (179 179 (:REWRITE DEFAULT-*-1))
 (175 67 (:REWRITE |(< (+ c x) (+ d y))|))
 (128 32 (:REWRITE |(+ y x)|))
 (96 96 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (80 16 (:REWRITE |(+ y (+ x z))|))
 (64 32 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (57 57 (:REWRITE USE-ALL-CONSP-2))
 (57 57 (:REWRITE USE-ALL-CONSP))
 (35 27 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (35 27 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (35 27 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (34 34 (:LINEAR ARRAY2P-LINEAR))
 (32 32 (:REWRITE DEFAULT-UNARY-MINUS))
 (32 32 (:REWRITE |(+ x (- x))|))
 (27 27 (:REWRITE |(equal (- x) (- y))|))
 (19 19 (:REWRITE CONSP-OF-HEADER))
 (16 16 (:TYPE-PRESCRIPTION COMPRESS1))
 )
(ARRAY-OF-MEMO-ALISTSP-AUX-OF-EXPAND-ARRAY
 (404 389 (:REWRITE DEFAULT-CDR))
 (404 10 (:DEFINITION ARRAY-OF-MEMO-ALISTSP-AUX))
 (211 211 (:REWRITE DEFAULT-CAR))
 (189 40 (:REWRITE DEFAULT-+-2))
 (162 162 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (54 42 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (54 35 (:REWRITE SIMPLIFY-SUMS-<))
 (54 35 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (54 35 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (54 10 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (51 35 (:REWRITE DEFAULT-<-2))
 (42 25 (:REWRITE DEFAULT-*-2))
 (40 40 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (40 40 (:REWRITE NORMALIZE-ADDENDS))
 (40 40 (:REWRITE DEFAULT-+-1))
 (40 35 (:REWRITE DEFAULT-<-1))
 (35 35 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (35 35 (:REWRITE |(< (- x) (- y))|))
 (25 25 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (25 25 (:REWRITE DEFAULT-*-1))
 (25 25 (:REWRITE ARRAY-OF-MEMO-ALISTSP-AUX-MONOTONE))
 (24 2 (:DEFINITION ASSOC-KEYWORD))
 (16 16 (:TYPE-PRESCRIPTION COMPRESS1))
 (15 15 (:TYPE-PRESCRIPTION MEMO-ALISTP))
 (14 8 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (14 8 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (14 8 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (10 10 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-MEMO-ALISTSP-AUX))
 (8 8 (:REWRITE |(equal (- x) (- y))|))
 (8 8 (:LINEAR ARRAY2P-LINEAR))
 (6 6 (:REWRITE USE-ALL-CONSP-2))
 (6 6 (:REWRITE USE-ALL-CONSP))
 (6 6 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE CONSP-OF-HEADER))
 )
(ARRAY-OF-MEMO-ALISTSP)
(ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP)
(ARRAY-OF-MEMO-ALISTSP-FORWARD-TO-<=-OF-ALEN1
 (4 4 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 )
(ARRAY-OF-MEMO-ALISTSP-FORWARD-TO-ARRAY1P
 (6 6 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (6 6 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 )
(TYPE-OF-AREF1-WHEN-ARRAY-OF-MEMO-ALISTSP
 (41 41 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (18 3 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (9 5 (:REWRITE DEFAULT-+-2))
 (5 5 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (5 5 (:REWRITE NORMALIZE-ADDENDS))
 (5 5 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (2 1 (:REWRITE SIMPLIFY-SUMS-<))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:REWRITE |(< (+ c x) d)|))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (1 1 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (1 1 (:REWRITE |(< d (+ c x))|))
 )
(ARRAY-OF-MEMO-ALISTSP-OF-ASET1
 (90 2 (:DEFINITION ARRAY-OF-MEMO-ALISTSP-AUX))
 (44 2 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (27 7 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (20 10 (:REWRITE DEFAULT-+-2))
 (14 14 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (12 2 (:REWRITE |(+ c (+ d x))|))
 (10 10 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (10 10 (:REWRITE NORMALIZE-ADDENDS))
 (10 10 (:REWRITE DEFAULT-+-1))
 (9 9 (:REWRITE ARRAY-OF-MEMO-ALISTSP-AUX-MONOTONE))
 (6 2 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (3 1 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (2 2 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-MEMO-ALISTSP-AUX))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (2 1 (:REWRITE SIMPLIFY-SUMS-<))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (1 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(ARRAY-OF-MEMO-ALISTSP-OF-MAKE-EMPTY-ARRAY-WITH-DEFAULT
 (8 2 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (6 2 (:REWRITE INTEGERP-WHEN-NATP))
 (5 5 (:REWRITE SIMPLIFY-SUMS-<))
 (5 5 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (5 5 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (5 5 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (5 5 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (5 5 (:REWRITE DEFAULT-<-2))
 (5 5 (:REWRITE DEFAULT-<-1))
 (5 5 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (5 5 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:TYPE-PRESCRIPTION NATP))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-A+AB))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:REWRITE DEFAULT-+-2))
 (2 2 (:REWRITE DEFAULT-+-1))
 (2 2 (:REWRITE |(< 0 (- x))|))
 (2 2 (:META META-INTEGERP-CORRECT))
 )
(ARRAY-OF-MEMO-ALISTSP-OF-EXPAND-ARRAY
 (153 153 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (76 13 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (40 2 (:REWRITE |(< (if a b c) x)|))
 (35 20 (:REWRITE DEFAULT-+-2))
 (34 20 (:REWRITE SIMPLIFY-SUMS-<))
 (34 20 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (34 20 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (33 21 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (28 20 (:REWRITE DEFAULT-<-2))
 (26 20 (:REWRITE DEFAULT-<-1))
 (20 20 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (20 20 (:REWRITE NORMALIZE-ADDENDS))
 (20 20 (:REWRITE DEFAULT-+-1))
 (20 20 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (20 20 (:REWRITE |(< (- x) (- y))|))
 (17 1 (:REWRITE |(< (+ c x) d)|))
 (16 8 (:REWRITE DEFAULT-*-2))
 (11 11 (:REWRITE ARRAY-OF-MEMO-ALISTSP-AUX-MONOTONE))
 (8 8 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (8 8 (:REWRITE DEFAULT-*-1))
 (8 8 (:LINEAR ARRAY2P-LINEAR))
 (8 4 (:REWRITE DEFAULT-CDR))
 (4 4 (:REWRITE CONSP-OF-HEADER))
 )
(ARRAY-OF-MEMO-ALISTSP-OF-MAYBE-EXPAND-ARRAY
 (47 47 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (17 1 (:REWRITE MAYBE-EXPAND-ARRAY-DOES-NOTHING))
 (14 5 (:REWRITE DEFAULT-CDR))
 (12 1 (:DEFINITION ASSOC-KEYWORD))
 (8 5 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (8 5 (:REWRITE DEFAULT-<-2))
 (7 5 (:REWRITE SIMPLIFY-SUMS-<))
 (7 5 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (6 4 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (5 5 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (5 5 (:REWRITE DEFAULT-<-1))
 (5 5 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (5 5 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:LINEAR ARRAY2P-LINEAR))
 (3 3 (:REWRITE USE-ALL-CONSP-2))
 (3 3 (:REWRITE USE-ALL-CONSP))
 (2 2 (:REWRITE CONSP-OF-HEADER))
 (1 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE DIMENSIONS-WHEN-NOT-CONSP-OF-HEADER-CHEAP))
 (1 1 (:REWRITE DEFAULT-CAR))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(ARRAY-OF-MEMO-ALISTSP-OF-MAKE-EMPTY-ARRAY
 (6 2 (:REWRITE INTEGERP-WHEN-NATP))
 (4 4 (:TYPE-PRESCRIPTION NATP))
 (4 4 (:REWRITE SIMPLIFY-SUMS-<))
 (4 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (4 4 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (4 4 (:REWRITE DEFAULT-<-2))
 (4 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-A+AB))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:REWRITE |(< 0 (- x))|))
 (2 2 (:META META-INTEGERP-CORRECT))
 )
(MEMOIZATIONP
 (10 5 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (5 5 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 )
(NOT-MEMOIZATIONP-OF-NIL)
(EMPTY-MEMOIZATION)
(ARRAY1P-OF-EMPTY-MEMOIZATION)
(ALEN1-OF-EMPTY-MEMOIZATION
 (23 23 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 )
(MEMOIZATIONP-OF-EMPTY-MEMOIZATION
 (20 20 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 )
(ADD-PAIR-TO-MEMOIZATION
 (28 28 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (24 12 (:REWRITE DEFAULT-<-1))
 (16 12 (:REWRITE SIMPLIFY-SUMS-<))
 (16 12 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (16 12 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (12 12 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (12 12 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (12 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (12 12 (:REWRITE |(< (- x) (- y))|))
 (8 4 (:REWRITE TREE-TO-MEMOIZEP-WHEN-AXE-TREEP-AND-BOUNDED-AXE-TREEP-CHEAP-2))
 (4 4 (:TYPE-PRESCRIPTION AXE-TREEP))
 (3 3 (:REWRITE DEFAULT-CDR))
 (3 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (3 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (3 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (2 2 (:REWRITE USE-ALL-CONSP-2))
 (2 2 (:REWRITE USE-ALL-CONSP))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (2 1 (:REWRITE DARGP-WHEN-NATP-CHEAP))
 (2 1 (:REWRITE DARGP-WHEN-MYQUOTEP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION NATP))
 (1 1 (:TYPE-PRESCRIPTION MYQUOTEP))
 (1 1 (:REWRITE USE-ALL-DARGP-2))
 (1 1 (:REWRITE USE-ALL-DARGP))
 (1 1 (:REWRITE MYQUOTEP-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE MYQUOTEP-WHEN-AXE-TREEP))
 (1 1 (:REWRITE DEFAULT-CAR))
 (1 1 (:REWRITE DARGP-WHEN-EQUAL-OF-QUOTE-AND-CAR-CHEAP))
 (1 1 (:REWRITE DARGP-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE DARGP-WHEN-CONSP-CHEAP))
 )
(MEMOIZATIONP-OF-ADD-PAIR-TO-MEMOIZATION
 (13 13 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (4 2 (:REWRITE DARGP-WHEN-NATP-CHEAP))
 (4 2 (:REWRITE DARGP-WHEN-MYQUOTEP-CHEAP))
 (3 2 (:REWRITE TREE-TO-MEMOIZEP-WHEN-AXE-TREEP-AND-BOUNDED-AXE-TREEP-CHEAP-2))
 (2 2 (:TYPE-PRESCRIPTION NATP))
 (2 2 (:TYPE-PRESCRIPTION MYQUOTEP))
 (2 2 (:REWRITE USE-ALL-DARGP-2))
 (2 2 (:REWRITE USE-ALL-DARGP))
 (2 2 (:REWRITE DARGP-WHEN-EQUAL-OF-QUOTE-AND-CAR-CHEAP))
 (2 2 (:REWRITE DARGP-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE DARGP-WHEN-CONSP-CHEAP))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (2 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (2 1 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION AXE-TREEP))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(ADD-PAIRS-TO-MEMOIZATION
 (192 192 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (30 17 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (30 17 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (30 17 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (27 27 (:REWRITE USE-ALL-CONSP-2))
 (27 27 (:REWRITE USE-ALL-CONSP))
 (26 26 (:LINEAR ARRAY2P-LINEAR))
 (17 17 (:REWRITE |(equal (- x) (- y))|))
 (6 6 (:REWRITE USE-ALL-DARGP-2))
 (6 6 (:REWRITE USE-ALL-DARGP))
 (6 6 (:REWRITE DARGP-WHEN-DARGP-LESS-THAN))
 (5 5 (:REWRITE DARGP-WHEN-CONSP-CHEAP))
 (4 2 (:REWRITE DARGP-WHEN-MYQUOTEP-CHEAP))
 (3 3 (:REWRITE MYQUOTEP-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE MYQUOTEP-WHEN-AXE-TREEP))
 (2 2 (:TYPE-PRESCRIPTION MYQUOTEP))
 )
(MEMOIZATIONP-OF-ADD-PAIRS-TO-MEMOIZATION
 (186 186 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (71 12 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (71 12 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (71 12 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (18 9 (:REWRITE TREE-TO-MEMOIZEP-WHEN-AXE-TREEP-AND-BOUNDED-AXE-TREEP-CHEAP-2))
 (18 9 (:REWRITE DARGP-WHEN-NATP-CHEAP))
 (18 9 (:REWRITE DARGP-WHEN-MYQUOTEP-CHEAP))
 (15 15 (:REWRITE DEFAULT-CAR))
 (14 14 (:LINEAR ARRAY2P-LINEAR))
 (12 12 (:REWRITE USE-ALL-CONSP-2))
 (12 12 (:REWRITE USE-ALL-CONSP))
 (12 12 (:REWRITE |(equal (- x) (- y))|))
 (10 10 (:REWRITE DEFAULT-CDR))
 (9 9 (:TYPE-PRESCRIPTION NATP))
 (9 9 (:TYPE-PRESCRIPTION MYQUOTEP))
 (9 9 (:TYPE-PRESCRIPTION AXE-TREEP))
 (9 9 (:REWRITE USE-ALL-DARGP-2))
 (9 9 (:REWRITE USE-ALL-DARGP))
 (9 9 (:REWRITE DARGP-WHEN-EQUAL-OF-QUOTE-AND-CAR-CHEAP))
 (9 9 (:REWRITE DARGP-WHEN-DARGP-LESS-THAN))
 (9 9 (:REWRITE DARGP-WHEN-CONSP-CHEAP))
 )
(LOOKUP-IN-MEMOIZATION
 (14 14 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (4 2 (:REWRITE DEFAULT-<-1))
 (3 2 (:REWRITE SIMPLIFY-SUMS-<))
 (3 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (3 2 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (2 2 (:REWRITE DEFAULT-<-2))
 (2 2 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (2 1 (:REWRITE TREE-TO-MEMOIZEP-WHEN-AXE-TREEP-AND-BOUNDED-AXE-TREEP-CHEAP-2))
 (2 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (2 1 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION AXE-TREEP))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(DARGP-OF-LOOKUP-IN-MEMOIZATION-WHEN-MEMOIZATIONP
 (16 1 (:DEFINITION STRIP-CDRS))
 (13 13 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (12 2 (:REWRITE DEFAULT-CDR))
 (5 1 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (4 2 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION ALL-CONSP))
 (2 2 (:REWRITE USE-ALL-CONSP-2))
 (2 2 (:REWRITE USE-ALL-CONSP))
 (2 2 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-ASSOC-EQUAL-CHEAP))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (2 1 (:REWRITE TREE-TO-MEMOIZEP-WHEN-AXE-TREEP-AND-BOUNDED-AXE-TREEP-CHEAP-2))
 (2 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (2 1 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (1 1 (:TYPE-PRESCRIPTION AXE-TREEP))
 (1 1 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE DEFAULT-CAR))
 (1 1 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(BOUNDED-MEMO-ALISTP)
(BOUNDED-MEMO-ALISTP-MONO
 (32 2 (:DEFINITION STRIP-CDRS))
 (24 4 (:REWRITE DEFAULT-CDR))
 (10 2 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (6 1 (:REWRITE BOUNDED-DARG-LISTP-WHEN-NOT-CONSP))
 (5 5 (:REWRITE USE-ALL-CONSP-2))
 (5 5 (:REWRITE USE-ALL-CONSP))
 (4 4 (:TYPE-PRESCRIPTION ALL-CONSP))
 (4 2 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (4 2 (:REWRITE BOUNDED-DARG-LISTP-WHEN-ALL-MYQUOTEP-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (2 2 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (2 2 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 2 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(BOUNDED-MEMO-ALISTP-IMPLIES-MEMO-ALISTP)
(BOUNDED-MEMO-ALISTP-OF-CONS-OF-CONS
 (115 31 (:REWRITE DEFAULT-CDR))
 (48 8 (:REWRITE BOUNDED-DARG-LISTP-WHEN-NOT-CONSP))
 (40 8 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (31 31 (:REWRITE USE-ALL-CONSP-2))
 (31 31 (:REWRITE USE-ALL-CONSP))
 (22 11 (:REWRITE TREE-TO-MEMOIZEP-WHEN-AXE-TREEP-AND-BOUNDED-AXE-TREEP-CHEAP-2))
 (18 9 (:REWRITE BOUNDED-DARG-LISTP-WHEN-ALL-MYQUOTEP-CHEAP))
 (16 16 (:TYPE-PRESCRIPTION ALL-CONSP))
 (16 8 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (15 15 (:REWRITE DEFAULT-CAR))
 (13 11 (:REWRITE DARGP-LESS-THAN-WHEN-NATP-CHEAP))
 (11 11 (:TYPE-PRESCRIPTION AXE-TREEP))
 (11 11 (:REWRITE DARGP-LESS-THAN-WHEN-QUOTEP-CHEAP))
 (11 11 (:REWRITE DARGP-LESS-THAN-WHEN-NOT-CONSP-CHEAP))
 (11 11 (:REWRITE DARGP-LESS-THAN-WHEN-EQUAL-OF-CAR-AND-QUOTE))
 (11 11 (:REWRITE DARGP-LESS-THAN-MONO))
 (9 9 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (9 9 (:REWRITE BOUNDED-DARG-LISTP-MONOTONE))
 (8 8 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (8 8 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 (6 6 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (6 6 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (6 6 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (6 6 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:REWRITE MYQUOTEP-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE MYQUOTEP-WHEN-AXE-TREEP))
 (2 2 (:REWRITE BOUNDED-MEMO-ALISTP-MONO))
 (2 1 (:REWRITE DARGP-WHEN-NATP-CHEAP))
 (2 1 (:REWRITE DARGP-WHEN-MYQUOTEP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION MYQUOTEP))
 (1 1 (:REWRITE USE-ALL-DARGP-2))
 (1 1 (:REWRITE USE-ALL-DARGP))
 (1 1 (:REWRITE DARGP-WHEN-EQUAL-OF-QUOTE-AND-CAR-CHEAP))
 (1 1 (:REWRITE DARGP-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE DARGP-WHEN-CONSP-CHEAP))
 )
(DARGP-LESS-THAN-OF-LOOKUP-EQUAL-WHEN-BOUNDED-MEMO-ALISTP
 (16 1 (:DEFINITION STRIP-CDRS))
 (12 2 (:REWRITE DEFAULT-CDR))
 (6 1 (:REWRITE BOUNDED-DARG-LISTP-WHEN-NOT-CONSP))
 (5 1 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (3 3 (:REWRITE USE-ALL-CONSP-2))
 (3 3 (:REWRITE USE-ALL-CONSP))
 (2 2 (:TYPE-PRESCRIPTION ALL-CONSP))
 (2 2 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-ASSOC-EQUAL-CHEAP))
 (2 1 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (2 1 (:REWRITE BOUNDED-DARG-LISTP-WHEN-ALL-MYQUOTEP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (1 1 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (1 1 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE DEFAULT-CAR))
 (1 1 (:REWRITE BOUNDED-DARG-LISTP-MONOTONE))
 (1 1 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 )
(BOUNDED-MEMO-ALISTP-OF-NIL
 (2 1 (:REWRITE BOUNDED-DARG-LISTP-WHEN-ALL-MYQUOTEP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION ALL-MYQUOTEP))
 (1 1 (:REWRITE BOUNDED-DARG-LISTP-MONOTONE))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX
 (148 148 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (6 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (6 2 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (5 5 (:REWRITE BOUNDED-MEMO-ALISTP-MONO))
 (5 3 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (4 3 (:REWRITE DEFAULT-+-2))
 (4 2 (:REWRITE SIMPLIFY-SUMS-<))
 (4 2 (:REWRITE DEFAULT-<-2))
 (3 3 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (3 3 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (3 3 (:REWRITE NORMALIZE-ADDENDS))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:REWRITE DEFAULT-<-1))
 (2 2 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (2 1 (:REWRITE |(< d (+ c x))|))
 (1 1 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (1 1 (:REWRITE |(< (+ c x) d)|))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-OF-MINUS1)
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-OF-0
 (8 2 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (4 2 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (3 3 (:REWRITE BOUNDED-MEMO-ALISTP-MONO))
 (2 2 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (2 2 (:TYPE-PRESCRIPTION ARRAY1P))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE
 (44 11 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (26 12 (:REWRITE INTEGERP-WHEN-NATP))
 (22 11 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (12 12 (:REWRITE REDUCE-INTEGERP-+))
 (12 12 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (12 12 (:REWRITE INTEGERP-MINUS-X))
 (12 12 (:META META-INTEGERP-CORRECT))
 (11 11 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (11 11 (:TYPE-PRESCRIPTION ARRAY1P))
 (7 7 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (7 7 (:REWRITE NORMALIZE-ADDENDS))
 (7 7 (:REWRITE DEFAULT-+-2))
 (7 7 (:REWRITE DEFAULT-+-1))
 (6 6 (:REWRITE SIMPLIFY-SUMS-<))
 (6 6 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (6 6 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (6 6 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (6 6 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (6 6 (:REWRITE DEFAULT-<-2))
 (6 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (6 6 (:REWRITE |(< (- x) (- y))|))
 )
(TYPE-OF-AREF1-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX
 (28 7 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (14 7 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (7 7 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (7 7 (:TYPE-PRESCRIPTION ARRAY1P))
 (3 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (3 3 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (3 3 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (3 3 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (3 3 (:REWRITE NORMALIZE-ADDENDS))
 (3 3 (:REWRITE DEFAULT-+-2))
 (3 3 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE))
 (3 3 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:REWRITE SIMPLIFY-SUMS-<))
 (2 2 (:REWRITE DEFAULT-<-2))
 (2 2 (:REWRITE DEFAULT-<-1))
 (2 2 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (1 1 (:REWRITE |(< d (+ c x))|))
 (1 1 (:REWRITE |(< (+ c x) d)|))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-OF-ASET1-TOO-HIGH
 (169 169 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (43 14 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (22 8 (:REWRITE INTEGERP-WHEN-NATP))
 (20 10 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (15 10 (:REWRITE SIMPLIFY-SUMS-<))
 (15 10 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (15 10 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (15 10 (:REWRITE DEFAULT-<-2))
 (15 5 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (14 14 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE))
 (10 10 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (10 10 (:REWRITE DEFAULT-<-1))
 (10 10 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (10 10 (:REWRITE |(< (- x) (- y))|))
 (10 10 (:LINEAR ARRAY2P-LINEAR))
 (9 6 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (9 6 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (9 6 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (8 8 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX))
 (8 8 (:REWRITE REDUCE-INTEGERP-+))
 (8 8 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (8 8 (:REWRITE INTEGERP-MINUS-X))
 (8 8 (:META META-INTEGERP-CORRECT))
 (6 6 (:REWRITE |(equal (- x) (- y))|))
 (6 2 (:REWRITE AREF1-OF-ASET1-DIFF))
 (5 5 (:TYPE-PRESCRIPTION ASET1))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE DEFAULT-+-2))
 (4 4 (:REWRITE DEFAULT-+-1))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-OF-ASET1
 (209 209 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (25 10 (:REWRITE SIMPLIFY-SUMS-<))
 (18 13 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (16 13 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (16 8 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (15 11 (:REWRITE NORMALIZE-ADDENDS))
 (13 13 (:REWRITE |(< (- x) (- y))|))
 (13 3 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (12 9 (:REWRITE DEFAULT-<-2))
 (10 10 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (9 9 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (9 9 (:REWRITE DEFAULT-<-1))
 (9 9 (:REWRITE DEFAULT-+-2))
 (9 9 (:REWRITE DEFAULT-+-1))
 (9 9 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (9 3 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (8 2 (:REWRITE |(+ y x)|))
 (6 6 (:LINEAR ARRAY2P-LINEAR))
 (5 1 (:REWRITE |(+ y (+ x z))|))
 (4 4 (:REWRITE |(< d (+ c x))|))
 (4 2 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (3 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (3 3 (:REWRITE |(< (+ c x) d)|))
 (2 2 (:TYPE-PRESCRIPTION ASET1))
 (2 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(equal (+ c x) d)|))
 (2 2 (:REWRITE |(+ x (- x))|))
 (1 1 (:REWRITE REDUCE-INTEGERP-+))
 (1 1 (:REWRITE INTEGERP-WHEN-NATP))
 (1 1 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE INTEGERP-MINUS-X))
 (1 1 (:META META-INTEGERP-CORRECT))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-OF-ASET1-AT-END
 (55 6 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (36 5 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE))
 (34 3 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX))
 (32 32 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (32 7 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (29 4 (:REWRITE SIMPLIFY-SUMS-<))
 (29 1 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-OF-ASET1-TOO-HIGH))
 (18 10 (:REWRITE NORMALIZE-ADDENDS))
 (16 4 (:REWRITE |(+ y x)|))
 (11 5 (:REWRITE |(+ c (+ d x))|))
 (10 2 (:REWRITE |(+ y (+ x z))|))
 (9 7 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (8 4 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (8 3 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (7 7 (:REWRITE |(< (- x) (- y))|))
 (6 6 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (6 6 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (6 6 (:REWRITE DEFAULT-+-2))
 (6 6 (:REWRITE DEFAULT-+-1))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE |(+ x (- x))|))
 (4 2 (:REWRITE |(* y x)|))
 (3 2 (:REWRITE DEFAULT-<-2))
 (3 1 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-1/AX+BX))
 (2 2 (:REWRITE DEFAULT-UNARY-/))
 (2 2 (:REWRITE DEFAULT-<-1))
 (2 2 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (2 2 (:REWRITE |(< d (+ c x))|))
 (2 2 (:REWRITE |(< (+ c x) d)|))
 (2 2 (:REWRITE |(+ 0 x)|))
 (2 2 (:REWRITE |(* a (/ a))|))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (1 1 (:TYPE-PRESCRIPTION ASET1))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-A+AB-=-0))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-A+AB))
 (1 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE |(equal (- x) 0)|))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(< 0 (- x))|))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-OF-COMPRESS1
 (26 26 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (23 9 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (15 5 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (14 14 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE))
 (14 7 (:REWRITE DEFAULT-<-2))
 (11 7 (:REWRITE SIMPLIFY-SUMS-<))
 (11 7 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (11 7 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (10 10 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX))
 (10 10 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (10 10 (:LINEAR ARRAY2P-LINEAR))
 (7 7 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (7 7 (:REWRITE DEFAULT-<-1))
 (7 7 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (7 7 (:REWRITE |(< (- x) (- y))|))
 (6 3 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (6 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (6 3 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE DEFAULT-+-2))
 (4 4 (:REWRITE DEFAULT-+-1))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-OF-CONS-OF-CONS-OF-HEADER
 (52 4 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (44 13 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE))
 (40 10 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (26 2 (:REWRITE SIMPLIFY-SUMS-<))
 (24 4 (:REWRITE DEFAULT-CDR))
 (24 4 (:REWRITE DEFAULT-CAR))
 (20 10 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (18 10 (:REWRITE NORMALIZE-ADDENDS))
 (16 4 (:REWRITE |(+ y x)|))
 (10 10 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (10 10 (:TYPE-PRESCRIPTION ARRAY1P))
 (10 2 (:REWRITE |(+ y (+ x z))|))
 (8 8 (:REWRITE USE-ALL-CONSP-2))
 (8 8 (:REWRITE USE-ALL-CONSP))
 (8 4 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (6 6 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (6 6 (:REWRITE DEFAULT-+-2))
 (6 6 (:REWRITE DEFAULT-+-1))
 (6 4 (:REWRITE |(+ c (+ d x))|))
 (4 4 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (4 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (4 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (4 4 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE |(equal (- x) (- y))|))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:REWRITE |(+ x (- x))|))
 (2 2 (:REWRITE |(< d (+ c x))|))
 (2 2 (:REWRITE |(< (+ c x) d)|))
 (2 2 (:REWRITE |(+ 0 x)|))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-OF-CONS-OF-CONS-OF-HEADER-IRREL
 (76 19 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (38 19 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (36 6 (:REWRITE DEFAULT-CDR))
 (36 6 (:REWRITE DEFAULT-CAR))
 (25 25 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE))
 (19 19 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (19 19 (:TYPE-PRESCRIPTION ARRAY1P))
 (19 19 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX))
 (14 10 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (14 10 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (14 10 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (12 12 (:REWRITE USE-ALL-CONSP-2))
 (12 12 (:REWRITE USE-ALL-CONSP))
 (10 10 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (10 10 (:REWRITE NORMALIZE-ADDENDS))
 (10 10 (:REWRITE DEFAULT-+-2))
 (10 10 (:REWRITE DEFAULT-+-1))
 (10 10 (:REWRITE |(equal (- x) (- y))|))
 )
(ENSURE-DEFAULT-SATISFIES-PRED)
(<-OF-IF-ARG1-ALT)
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-OF-MAKE-EMPTY-ARRAY-WITH-DEFAULT
 (41 17 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (38 7 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE))
 (35 7 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (28 16 (:REWRITE SIMPLIFY-SUMS-<))
 (21 7 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (17 17 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (17 17 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (17 17 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (17 17 (:REWRITE |(< (- x) (- y))|))
 (15 15 (:REWRITE DEFAULT-<-2))
 (15 15 (:REWRITE DEFAULT-<-1))
 (15 15 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (15 5 (:REWRITE INTEGERP-WHEN-NATP))
 (12 8 (:REWRITE NORMALIZE-ADDENDS))
 (8 2 (:REWRITE |(+ y x)|))
 (7 7 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (7 7 (:TYPE-PRESCRIPTION MAKE-EMPTY-ARRAY-WITH-DEFAULT))
 (7 7 (:TYPE-PRESCRIPTION ARRAY1P))
 (6 6 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (6 6 (:REWRITE DEFAULT-+-2))
 (6 6 (:REWRITE DEFAULT-+-1))
 (5 5 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-A+AB))
 (5 5 (:REWRITE REDUCE-INTEGERP-+))
 (5 5 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (5 5 (:REWRITE INTEGERP-MINUS-X))
 (5 5 (:REWRITE |(< 0 (- x))|))
 (5 5 (:META META-INTEGERP-CORRECT))
 (5 1 (:REWRITE |(+ y (+ x z))|))
 (4 2 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (3 2 (:REWRITE |(+ c (+ d x))|))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(+ x (- x))|))
 (1 1 (:REWRITE |(< d (+ c x))|))
 (1 1 (:REWRITE |(< (+ c x) d)|))
 (1 1 (:REWRITE |(+ 0 x)|))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-BEYOND-LENGTH
 (359 14 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX))
 (73 73 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (70 37 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (58 20 (:REWRITE SIMPLIFY-SUMS-<))
 (56 38 (:REWRITE DEFAULT-+-2))
 (50 42 (:REWRITE NORMALIZE-ADDENDS))
 (43 38 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (40 17 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (38 38 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (38 38 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (38 38 (:REWRITE DEFAULT-+-1))
 (37 37 (:REWRITE |(< (- x) (- y))|))
 (32 18 (:REWRITE DEFAULT-<-1))
 (28 18 (:REWRITE |(< (+ c x) d)|))
 (27 3 (:REWRITE |(< (+ d x) (+ c y))|))
 (24 8 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (22 18 (:REWRITE DEFAULT-<-2))
 (20 19 (:REWRITE |(< d (+ c x))|))
 (18 18 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (16 16 (:LINEAR ARRAY2P-LINEAR))
 (16 4 (:REWRITE |(+ y x)|))
 (10 2 (:REWRITE |(+ y (+ x z))|))
 (8 4 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (4 4 (:REWRITE DEFAULT-UNARY-MINUS))
 (4 4 (:REWRITE |(+ x (- x))|))
 (4 2 (:REWRITE |(< (+ c x) (+ d y))|))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-OF-EXPAND-ARRAY-HELPER
 (4888 4736 (:REWRITE DEFAULT-CDR))
 (2683 2683 (:REWRITE DEFAULT-CAR))
 (2580 2580 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (1015 660 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (943 577 (:REWRITE DEFAULT-+-2))
 (890 513 (:REWRITE SIMPLIFY-SUMS-<))
 (717 497 (:REWRITE DEFAULT-<-2))
 (674 91 (:REWRITE |(< (+ d x) (+ c y))|))
 (673 609 (:REWRITE NORMALIZE-ADDENDS))
 (660 660 (:REWRITE |(< (- x) (- y))|))
 (577 577 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (577 577 (:REWRITE DEFAULT-+-1))
 (559 226 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (539 497 (:REWRITE DEFAULT-<-1))
 (497 497 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (321 147 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (282 179 (:REWRITE DEFAULT-*-2))
 (228 19 (:DEFINITION ASSOC-KEYWORD))
 (179 179 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (179 179 (:REWRITE DEFAULT-*-1))
 (175 67 (:REWRITE |(< (+ c x) (+ d y))|))
 (128 32 (:REWRITE |(+ y x)|))
 (96 96 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (80 16 (:REWRITE |(+ y (+ x z))|))
 (64 32 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (57 57 (:REWRITE USE-ALL-CONSP-2))
 (57 57 (:REWRITE USE-ALL-CONSP))
 (35 27 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (35 27 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (35 27 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (34 34 (:LINEAR ARRAY2P-LINEAR))
 (32 32 (:REWRITE DEFAULT-UNARY-MINUS))
 (32 32 (:REWRITE |(+ x (- x))|))
 (27 27 (:REWRITE |(equal (- x) (- y))|))
 (19 19 (:REWRITE CONSP-OF-HEADER))
 (16 16 (:TYPE-PRESCRIPTION COMPRESS1))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-OF-EXPAND-ARRAY
 (414 10 (:DEFINITION ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX))
 (404 389 (:REWRITE DEFAULT-CDR))
 (211 211 (:REWRITE DEFAULT-CAR))
 (189 40 (:REWRITE DEFAULT-+-2))
 (162 162 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (54 42 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (54 35 (:REWRITE SIMPLIFY-SUMS-<))
 (54 35 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (54 35 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (54 10 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (51 35 (:REWRITE DEFAULT-<-2))
 (42 25 (:REWRITE DEFAULT-*-2))
 (40 40 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (40 40 (:REWRITE NORMALIZE-ADDENDS))
 (40 40 (:REWRITE DEFAULT-+-1))
 (40 35 (:REWRITE DEFAULT-<-1))
 (36 16 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (35 35 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (35 35 (:REWRITE |(< (- x) (- y))|))
 (25 25 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (25 25 (:REWRITE DEFAULT-*-1))
 (25 25 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE))
 (24 2 (:DEFINITION ASSOC-KEYWORD))
 (16 16 (:TYPE-PRESCRIPTION COMPRESS1))
 (15 15 (:TYPE-PRESCRIPTION BOUNDED-MEMO-ALISTP))
 (14 8 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (14 8 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (14 8 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (10 10 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX))
 (10 10 (:REWRITE BOUNDED-MEMO-ALISTP-MONO))
 (8 8 (:REWRITE |(equal (- x) (- y))|))
 (8 8 (:LINEAR ARRAY2P-LINEAR))
 (6 6 (:REWRITE USE-ALL-CONSP-2))
 (6 6 (:REWRITE USE-ALL-CONSP))
 (6 6 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (1 1 (:REWRITE CONSP-OF-HEADER))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP)
(ARRAY1P-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP)
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-FORWARD-TO-<=-OF-ALEN1
 (4 4 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-FORWARD-TO-ARRAY1P
 (6 6 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (6 6 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 )
(TYPE-OF-AREF1-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP
 (41 41 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (7 4 (:REWRITE DEFAULT-+-2))
 (4 4 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (4 4 (:REWRITE NORMALIZE-ADDENDS))
 (4 4 (:REWRITE DEFAULT-+-1))
 (4 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (3 1 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (2 2 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (2 2 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (2 1 (:REWRITE SIMPLIFY-SUMS-<))
 (2 1 (:REWRITE DEFAULT-<-1))
 (2 1 (:REWRITE |(< (+ c x) d)|))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE BOUNDED-MEMO-ALISTP-MONO))
 (1 1 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 (1 1 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (1 1 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (1 1 (:REWRITE |(< d (+ c x))|))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-OF-ASET1
 (96 2 (:DEFINITION ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX))
 (48 2 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 (18 9 (:REWRITE DEFAULT-+-2))
 (16 16 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (16 5 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (12 2 (:REWRITE |(+ c (+ d x))|))
 (9 9 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (9 9 (:REWRITE NORMALIZE-ADDENDS))
 (9 9 (:REWRITE DEFAULT-+-1))
 (9 9 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE))
 (6 2 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (5 5 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 (3 1 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (3 1 (:REWRITE ARRAY-OF-MEMO-ALISTSP-OF-ASET1))
 (2 2 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (2 1 (:REWRITE SIMPLIFY-SUMS-<))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (2 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (1 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-OF-MAKE-EMPTY-ARRAY-WITH-DEFAULT
 (9 3 (:REWRITE INTEGERP-WHEN-NATP))
 (8 8 (:REWRITE SIMPLIFY-SUMS-<))
 (8 8 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (8 8 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (8 8 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (8 8 (:REWRITE DEFAULT-<-2))
 (8 8 (:REWRITE DEFAULT-<-1))
 (8 8 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (8 8 (:REWRITE |(< (- x) (- y))|))
 (7 7 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (6 6 (:TYPE-PRESCRIPTION NATP))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-A+AB))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:REWRITE |(< 0 (- x))|))
 (3 3 (:META META-INTEGERP-CORRECT))
 (2 2 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (2 2 (:REWRITE NORMALIZE-ADDENDS))
 (2 2 (:REWRITE DEFAULT-+-2))
 (2 2 (:REWRITE DEFAULT-+-1))
 (2 2 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-OF-EXPAND-ARRAY
 (153 153 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (40 2 (:REWRITE |(< (if a b c) x)|))
 (34 20 (:REWRITE SIMPLIFY-SUMS-<))
 (34 20 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (34 20 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (33 21 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (28 20 (:REWRITE DEFAULT-<-2))
 (27 16 (:REWRITE DEFAULT-+-2))
 (26 20 (:REWRITE DEFAULT-<-1))
 (20 20 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (20 20 (:REWRITE |(< (- x) (- y))|))
 (18 5 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (17 1 (:REWRITE |(< (+ c x) d)|))
 (16 16 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (16 16 (:REWRITE NORMALIZE-ADDENDS))
 (16 16 (:REWRITE DEFAULT-+-1))
 (16 8 (:REWRITE DEFAULT-*-2))
 (11 11 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE))
 (8 8 (:REWRITE NORMALIZE-FACTORS-GATHER-EXPONENTS))
 (8 8 (:REWRITE DEFAULT-*-1))
 (8 8 (:LINEAR ARRAY2P-LINEAR))
 (8 4 (:REWRITE DEFAULT-CDR))
 (5 5 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 (4 4 (:REWRITE CONSP-OF-HEADER))
 (3 1 (:REWRITE ARRAY-OF-MEMO-ALISTSP-OF-EXPAND-ARRAY))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-OF-MAYBE-EXPAND-ARRAY
 (47 47 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (17 1 (:REWRITE MAYBE-EXPAND-ARRAY-DOES-NOTHING))
 (14 5 (:REWRITE DEFAULT-CDR))
 (12 1 (:DEFINITION ASSOC-KEYWORD))
 (8 5 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (8 5 (:REWRITE DEFAULT-<-2))
 (7 5 (:REWRITE SIMPLIFY-SUMS-<))
 (7 5 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (6 4 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (5 5 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (5 5 (:REWRITE DEFAULT-<-1))
 (5 5 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (5 5 (:REWRITE |(< (- x) (- y))|))
 (4 4 (:LINEAR ARRAY2P-LINEAR))
 (3 3 (:REWRITE USE-ALL-CONSP-2))
 (3 3 (:REWRITE USE-ALL-CONSP))
 (2 2 (:REWRITE CONSP-OF-HEADER))
 (1 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE DIMENSIONS-WHEN-NOT-CONSP-OF-HEADER-CHEAP))
 (1 1 (:REWRITE DEFAULT-CAR))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-OF-MAKE-EMPTY-ARRAY
 (6 2 (:REWRITE INTEGERP-WHEN-NATP))
 (4 4 (:TYPE-PRESCRIPTION NATP))
 (4 4 (:REWRITE SIMPLIFY-SUMS-<))
 (4 4 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (4 4 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (4 4 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (4 4 (:REWRITE DEFAULT-<-2))
 (4 4 (:REWRITE DEFAULT-<-1))
 (4 4 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (4 4 (:REWRITE |(< (- x) (- y))|))
 (2 2 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-A+AB))
 (2 2 (:REWRITE REDUCE-INTEGERP-+))
 (2 2 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE INTEGERP-MINUS-X))
 (2 2 (:REWRITE |(< 0 (- x))|))
 (2 2 (:META META-INTEGERP-CORRECT))
 )
(BOUNDED-MEMOIZATIONP
 (10 5 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (5 5 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 )
(ARRAY-OF-MEMO-ALISTSP-AUX-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX
 (709 22 (:REWRITE ARRAY-OF-MEMO-ALISTSP-AUX-BEYOND-LENGTH))
 (467 25 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-BEYOND-LENGTH))
 (460 230 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (325 46 (:REWRITE DEFAULT-+-2))
 (272 22 (:REWRITE ARRAY-OF-MEMO-ALISTSP-AUX-MONOTONE))
 (256 26 (:REWRITE |(+ c (+ d x))|))
 (255 13 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (230 230 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (230 230 (:TYPE-PRESCRIPTION ARRAY1P))
 (168 16 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-MEMO-ALISTSP-AUX))
 (124 31 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (64 52 (:REWRITE NORMALIZE-ADDENDS))
 (48 16 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (48 6 (:REWRITE SIMPLIFY-SUMS-<))
 (46 46 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (46 46 (:REWRITE DEFAULT-+-1))
 (45 15 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 (37 10 (:REWRITE |(< d (+ c x))|))
 (36 9 (:REWRITE |(+ 0 x)|))
 (31 4 (:REWRITE |(< (+ d x) (+ c y))|))
 (31 4 (:REWRITE |(< (+ c x) (+ d y))|))
 (30 30 (:TYPE-PRESCRIPTION ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 (28 13 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (25 25 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE))
 (24 6 (:REWRITE |(+ y x)|))
 (15 15 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX))
 (15 15 (:REWRITE BOUNDED-MEMO-ALISTP-MONO))
 (15 3 (:REWRITE |(+ y (+ x z))|))
 (13 13 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (13 13 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (13 13 (:REWRITE |(< (- x) (- y))|))
 (12 6 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (12 3 (:REWRITE DEFAULT-<-2))
 (7 7 (:REWRITE |(< (+ c x) d)|))
 (6 6 (:REWRITE DEFAULT-UNARY-MINUS))
 (6 6 (:REWRITE |(+ x (- x))|))
 (3 3 (:REWRITE DEFAULT-<-1))
 (3 3 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 )
(MEMOIZATIONP-WHEN-BOUNDED-MEMOIZATIONP
 (18 4 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (6 2 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-BEYOND-LENGTH))
 (4 4 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 (2 2 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (2 2 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (2 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(BOUNDED-MEMOIZATIONP-FORWARD-TO-MEMOIZATIONP)
(DARGP-LESS-THAN-OF-LOOKUP-IN-MEMOIZATION-WHEN-BOUNDED-MEMOIZATIONP
 (13 13 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (4 2 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (2 2 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-CONSP-CHEAP))
 (2 2 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-ASSOC-EQUAL-CHEAP))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (2 1 (:REWRITE TREE-TO-MEMOIZEP-WHEN-AXE-TREEP-AND-BOUNDED-AXE-TREEP-CHEAP-2))
 (2 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:TYPE-PRESCRIPTION AXE-TREEP))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(BOUNDED-MEMOIZATIONP-AUX-OF-EMPTY-MEMOIZATION
 (192 17 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-BEYOND-LENGTH))
 (88 17 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE))
 (60 12 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (51 15 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (36 12 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (32 9 (:REWRITE |(+ c (+ d x))|))
 (25 13 (:REWRITE SIMPLIFY-SUMS-<))
 (23 19 (:REWRITE NORMALIZE-ADDENDS))
 (17 17 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (17 17 (:REWRITE DEFAULT-+-2))
 (17 17 (:REWRITE DEFAULT-+-1))
 (16 16 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (16 16 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (16 2 (:REWRITE |(< (+ d x) (+ c y))|))
 (15 15 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (15 15 (:REWRITE |(< (- x) (- y))|))
 (15 5 (:REWRITE INTEGERP-WHEN-NATP))
 (12 12 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (12 12 (:TYPE-PRESCRIPTION MAKE-EMPTY-ARRAY))
 (12 12 (:TYPE-PRESCRIPTION ARRAY1P))
 (12 12 (:REWRITE DEFAULT-<-2))
 (12 12 (:REWRITE DEFAULT-<-1))
 (12 12 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (8 2 (:REWRITE |(+ y x)|))
 (5 5 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-A+AB))
 (5 5 (:REWRITE REDUCE-INTEGERP-+))
 (5 5 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (5 5 (:REWRITE INTEGERP-MINUS-X))
 (5 5 (:REWRITE ALEN1-OF-MAKE-EMPTY-ARRAY))
 (5 5 (:REWRITE |(< 0 (- x))|))
 (5 5 (:META META-INTEGERP-CORRECT))
 (5 1 (:REWRITE |(+ y (+ x z))|))
 (4 2 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (3 3 (:REWRITE |(< d (+ c x))|))
 (3 3 (:REWRITE |(< (+ c x) d)|))
 (3 3 (:REWRITE |(+ 0 x)|))
 (2 2 (:REWRITE DEFAULT-UNARY-MINUS))
 (2 2 (:REWRITE |(+ x (- x))|))
 (1 1 (:REWRITE |(< (+ c x) (+ d y))|))
 )
(BOUNDED-MEMOIZATIONP-OF-EMPTY-MEMOIZATION
 (20 20 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 )
(BOUNDED-MEMOIZATIONP-OF-ADD-PAIR-TO-MEMOIZATION
 (13 13 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (3 2 (:REWRITE TREE-TO-MEMOIZEP-WHEN-AXE-TREEP-AND-BOUNDED-AXE-TREEP-CHEAP-2))
 (2 2 (:REWRITE DARGP-LESS-THAN-WHEN-EQUAL-OF-CAR-AND-QUOTE))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (2 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (2 1 (:REWRITE DARGP-LESS-THAN-WHEN-NATP-CHEAP))
 (2 1 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION AXE-TREEP))
 (1 1 (:REWRITE DARGP-LESS-THAN-WHEN-QUOTEP-CHEAP))
 (1 1 (:REWRITE DARGP-LESS-THAN-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE DARGP-LESS-THAN-WHEN-CONSP-CHEAP))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(BOUNDED-MEMOIZATIONP-OF-ADD-PAIRS-TO-MEMOIZATION
 (14 7 (:REWRITE DARGP-LESS-THAN-WHEN-NATP-CHEAP))
 (10 10 (:REWRITE USE-ALL-CONSP-2))
 (10 10 (:REWRITE USE-ALL-CONSP))
 (9 9 (:REWRITE DEFAULT-CDR))
 (7 7 (:REWRITE DEFAULT-CAR))
 (7 7 (:REWRITE DARGP-LESS-THAN-WHEN-QUOTEP-CHEAP))
 (7 7 (:REWRITE DARGP-LESS-THAN-WHEN-NOT-CONSP-CHEAP))
 (7 7 (:REWRITE DARGP-LESS-THAN-WHEN-EQUAL-OF-CAR-AND-QUOTE))
 (7 7 (:REWRITE DARGP-LESS-THAN-WHEN-CONSP-CHEAP))
 (7 7 (:REWRITE DARGP-LESS-THAN-MONO))
 )
(ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE2
 (1060 41 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-BEYOND-LENGTH))
 (414 207 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (291 41 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE))
 (281 38 (:REWRITE DEFAULT-+-2))
 (262 20 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (228 24 (:REWRITE |(+ c (+ d x))|))
 (207 207 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (207 207 (:TYPE-PRESCRIPTION ARRAY1P))
 (178 26 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX))
 (104 26 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (78 26 (:REWRITE TYPE-OF-AREF1-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 (56 44 (:REWRITE NORMALIZE-ADDENDS))
 (55 13 (:REWRITE SIMPLIFY-SUMS-<))
 (52 52 (:TYPE-PRESCRIPTION ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 (38 38 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (38 38 (:REWRITE DEFAULT-+-1))
 (37 10 (:REWRITE |(< d (+ c x))|))
 (36 9 (:REWRITE |(+ 0 x)|))
 (35 20 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (31 4 (:REWRITE |(< (+ d x) (+ c y))|))
 (31 4 (:REWRITE |(< (+ c x) (+ d y))|))
 (24 6 (:REWRITE |(+ y x)|))
 (20 20 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (20 20 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (20 20 (:REWRITE |(< (- x) (- y))|))
 (19 10 (:REWRITE DEFAULT-<-2))
 (15 3 (:REWRITE |(+ y (+ x z))|))
 (12 6 (:REWRITE BUBBLE-DOWN-+-MATCH-1))
 (10 10 (:REWRITE DEFAULT-<-1))
 (10 10 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (7 7 (:REWRITE |(< (+ c x) d)|))
 (7 3 (:REWRITE INTEGERP-WHEN-NATP))
 (6 6 (:REWRITE DEFAULT-UNARY-MINUS))
 (6 6 (:REWRITE |(+ x (- x))|))
 (3 3 (:REWRITE REDUCE-INTEGERP-+))
 (3 3 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE INTEGERP-MINUS-X))
 (3 3 (:META META-INTEGERP-CORRECT))
 )
(BOUNDED-MEMOIZATIONP-MONOTONE
 (7 2 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-BEYOND-LENGTH))
 (6 2 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-MEMO-ALISTSP))
 (2 2 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (2 2 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 (2 2 (:REWRITE ARRAY-OF-BOUNDED-MEMO-ALISTSP-AUX-MONOTONE))
 (2 2 (:LINEAR ARRAY2P-LINEAR))
 (2 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (2 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (2 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(MAYBE-MEMOIZATIONP)
(MAYBE-MEMOIZATIONP-FORWARD-TO-MEMOIZATIONP
 (1 1 (:REWRITE MEMOIZATIONP-WHEN-BOUNDED-MEMOIZATIONP))
 )
(MAYBE-MEMOIZATIONP-OF-ADD-PAIRS-TO-MEMOIZATION
 (6 6 (:REWRITE DEFAULT-CDR))
 (5 5 (:REWRITE USE-ALL-DARGP-2))
 (5 5 (:REWRITE USE-ALL-DARGP))
 (5 5 (:REWRITE MEMOIZATIONP-WHEN-BOUNDED-MEMOIZATIONP))
 (5 5 (:REWRITE DARGP-WHEN-DARGP-LESS-THAN))
 (4 4 (:REWRITE DARGP-WHEN-CONSP-CHEAP))
 (2 2 (:REWRITE USE-ALL-CONSP-2))
 (2 2 (:REWRITE USE-ALL-CONSP))
 (2 2 (:REWRITE MYQUOTEP-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE MYQUOTEP-WHEN-AXE-TREEP))
 (2 2 (:REWRITE DEFAULT-CAR))
 (2 1 (:REWRITE DARGP-WHEN-MYQUOTEP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION NATP))
 (1 1 (:TYPE-PRESCRIPTION MYQUOTEP))
 (1 1 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (1 1 (:REWRITE |(equal (- x) (- y))|))
 )
(MEMOIZATIONP-WHEN-MAYBE-MEMOIZATIONP)
(MAYBE-BOUNDED-MEMOIZATIONP)
(MAYBE-BOUNDED-MEMOIZATIONP-OF-EMPTY-MEMOIZATION)
(MAYBE-BOUNDED-MEMOIZATIONP-OF-NIL)
(MAYBE-BOUNDED-MEMOIZATIONP-FORWARD-TO-BOUNDED-MEMOIZATIONP
 (1 1 (:REWRITE BOUNDED-MEMOIZATIONP-MONOTONE))
 )
(MAYBE-BOUNDED-MEMOIZATIONP-OF-ADD-PAIRS-TO-MEMOIZATION
 (2 2 (:REWRITE BOUNDED-MEMOIZATIONP-MONOTONE))
 (2 1 (:REWRITE DARGP-LESS-THAN-WHEN-NATP-CHEAP))
 (1 1 (:REWRITE DARGP-LESS-THAN-WHEN-QUOTEP-CHEAP))
 (1 1 (:REWRITE DARGP-LESS-THAN-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE DARGP-LESS-THAN-WHEN-EQUAL-OF-CAR-AND-QUOTE))
 (1 1 (:REWRITE DARGP-LESS-THAN-WHEN-CONSP-CHEAP))
 (1 1 (:REWRITE DARGP-LESS-THAN-MONO))
 )
(MAYBE-MEMOIZATIONP-WHEN-MAYBE-BOUNDED-MEMOIZATIONP)
(MAYBE-BOUNDED-MEMOIZATIONP-MONOTONE
 (1 1 (:REWRITE SIMPLIFY-SUMS-<))
 (1 1 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (1 1 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (1 1 (:REWRITE PREFER-POSITIVE-ADDENDS-<))
 (1 1 (:REWRITE DEFAULT-<-2))
 (1 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (1 1 (:REWRITE |(< (- x) (- y))|))
 )
(HEAD-FUNCTION-SYMBOLS)
(SYMBOL-LISTP-OF-HEAD-FUNCTION-SYMBOLS
 (70 10 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (43 17 (:REWRITE SYMBOLP-OF-CAR-WHEN-AXE-TREEP-CHEAP))
 (39 35 (:REWRITE DEFAULT-CAR))
 (36 32 (:REWRITE DEFAULT-CDR))
 (28 28 (:TYPE-PRESCRIPTION ALL-CONSP))
 (28 28 (:REWRITE USE-ALL-CONSP-2))
 (28 28 (:REWRITE USE-ALL-CONSP))
 (20 10 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (20 4 (:REWRITE ALL-CONSP-OF-CDR))
 (17 17 (:TYPE-PRESCRIPTION AXE-TREEP))
 (14 14 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (14 14 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 (10 10 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (10 10 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 )
(PRINT-MEMO-STATS-AUX
 (119 15 (:REWRITE INTEGERP-WHEN-NATP))
 (94 29 (:REWRITE DEFAULT-CDR))
 (80 1 (:DEFINITION MERGE-SORT-BY-CDR->))
 (63 63 (:REWRITE REMOVE-WEAK-INEQUALITIES-TWO))
 (62 62 (:REWRITE REMOVE-WEAK-INEQUALITIES-ONE))
 (62 1 (:DEFINITION NTHCDR))
 (60 20 (:REWRITE DEFAULT-CAR))
 (48 36 (:REWRITE DEFAULT-<-2))
 (48 1 (:DEFINITION MERGE-BY-CDR->))
 (43 43 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (41 37 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-<))
 (38 36 (:REWRITE SIMPLIFY-SUMS-<))
 (37 1 (:REWRITE ZP-OPEN))
 (36 36 (:REWRITE DEFAULT-<-1))
 (36 36 (:REWRITE <-WHEN-BOUNDED-AXE-TREEP))
 (36 8 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (34 1 (:DEFINITION MAKE-COUNT-ALIST))
 (33 33 (:REWRITE USE-ALL-CONSP-2))
 (33 33 (:REWRITE USE-ALL-CONSP))
 (32 1 (:DEFINITION UNIQUIFY-ALIST-EQ-AUX))
 (30 6 (:DEFINITION TRUE-LIST-FIX))
 (30 3 (:DEFINITION LEN))
 (27 1 (:REWRITE |(< x (if a b c))|))
 (26 2 (:DEFINITION TAKE))
 (19 15 (:REWRITE DEFAULT-+-2))
 (17 4 (:REWRITE |(< (- x) 0)|))
 (16 1 (:DEFINITION STRIP-CARS))
 (15 15 (:TYPE-PRESCRIPTION ALL-CONSP))
 (15 15 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (15 15 (:REWRITE DEFAULT-+-1))
 (15 15 (:META META-INTEGERP-CORRECT))
 (14 2 (:REWRITE ALL-CONSP-OF-MERGE-SORT-BY-CDR->))
 (14 2 (:DEFINITION EVENS))
 (13 1 (:DEFINITION ODDS))
 (12 12 (:REWRITE DEFAULT-UNARY-MINUS))
 (12 6 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (12 1 (:REWRITE |(+ (if a b c) x)|))
 (11 1 (:REWRITE |(+ (+ x y) z)|))
 (10 10 (:TYPE-PRESCRIPTION MAKE-COUNT-ALIST))
 (10 2 (:REWRITE ALL-CONPS-OF-EVENS))
 (9 9 (:TYPE-PRESCRIPTION INCREMENT-COUNTS-IN-SYMBOL-COUNT-WORLD))
 (8 8 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (8 8 (:REWRITE REDUCE-INTEGERP-+))
 (8 8 (:REWRITE INTEGERP-WHEN-DARGP-LESS-THAN))
 (8 1 (:DEFINITION ACONS))
 (7 1 (:REWRITE CONS-CAR-CDR))
 (6 6 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (6 6 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (5 3 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (5 3 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (5 3 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (5 1 (:REWRITE |(+ y x)|))
 (4 4 (:LINEAR ARRAY2P-LINEAR))
 (4 2 (:REWRITE ALL-CONSP-OF-MAKE-COUNT-ALIST))
 (4 1 (:REWRITE ALL-CONSP-OF-CDR))
 (3 3 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-A+AB-<-0))
 (3 3 (:REWRITE NONNEG-WHEN-DARGP-LESS-THAN))
 (3 3 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (3 3 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (3 3 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 (3 3 (:REWRITE |(equal (- x) (- y))|))
 (2 2 (:TYPE-PRESCRIPTION UNIQUIFY-ALIST-EQ-AUX))
 (2 2 (:DEFINITION REVAPPEND))
 (1 1 (:REWRITE SIMPLIFY-TERMS-SUCH-AS-0-<-A+AB))
 (1 1 (:REWRITE MEMOIZATIONP-WHEN-BOUNDED-MEMOIZATIONP))
 (1 1 (:REWRITE EQUAL-OF-NON-NATP-AND-CAAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 (1 1 (:REWRITE |(< 0 (- x))|))
 (1 1 (:REWRITE |(< (+ d x) (+ c y))|))
 (1 1 (:DEFINITION ASSOC-EQUAL))
 )
(PRINT-MEMO-STATS
 (83 47 (:TYPE-PRESCRIPTION ALEN1-TYPE))
 (47 47 (:TYPE-PRESCRIPTION POSP-OF-ALEN1))
 (17 2 (:REWRITE SIMPLIFY-SUMS-EQUAL))
 (17 2 (:REWRITE SIMPLIFY-PRODUCTS-GATHER-EXPONENTS-EQUAL))
 (17 2 (:REWRITE PREFER-POSITIVE-ADDENDS-EQUAL))
 (16 1 (:DEFINITION STRIP-CARS))
 (14 7 (:TYPE-PRESCRIPTION TRUE-LISTP-OF-DIMENSIONS))
 (12 2 (:REWRITE DEFAULT-CAR))
 (10 1 (:DEFINITION LEN))
 (5 1 (:REWRITE USE-ALL-CONSP-FOR-CAR))
 (4 4 (:REWRITE MEMOIZATIONP-WHEN-BOUNDED-MEMOIZATIONP))
 (3 3 (:REWRITE USE-ALL-CONSP-2))
 (3 3 (:REWRITE USE-ALL-CONSP))
 (3 3 (:REWRITE MAYBE-MEMOIZATIONP-WHEN-MAYBE-BOUNDED-MEMOIZATIONP))
 (2 2 (:TYPE-PRESCRIPTION ALL-CONSP))
 (2 2 (:REWRITE LEN-WHEN-DARGP-LESS-THAN))
 (2 2 (:REWRITE DEFAULT-CDR))
 (2 2 (:REWRITE |(equal (- x) (- y))|))
 (2 1 (:REWRITE DEFAULT-+-2))
 (2 1 (:REWRITE CONSP-OF-CAR-WHEN-SYMBOL-TERM-ALISTP-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION SYMBOL-TERM-ALISTP))
 (1 1 (:REWRITE TRUE-LISTP-OF-CAR-WHEN-WHEN-BOUNDED-NATP-ALISTP))
 (1 1 (:REWRITE NORMALIZE-TERMS-SUCH-AS-A/A+B-+-B/A+B))
 (1 1 (:REWRITE NORMALIZE-ADDENDS))
 (1 1 (:REWRITE DEFAULT-+-1))
 (1 1 (:REWRITE ARRAY1P-WHEN-ARRAY-OF-BOUNDED-MEMO-ALISTSP))
 (1 1 (:REWRITE AREF1-WHEN-TOO-LARGE-CHEAP))
 (1 1 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP-CHEAP))
 (1 1 (:REWRITE ALL-CONSP-WHEN-NOT-CONSP))
 )
