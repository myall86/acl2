(IN$-KNOWN-BOOLEANS-JUSTIFICATION)
(ARRAY-REFP$-KNOWN-BOOLEANS-JUSTIFICATION)
(ARRAY-REF-LISTP$-KNOWN-BOOLEANS-JUSTIFICATION)
(STRING-HAS-BEEN-INTERNEDP$-KNOWN-BOOLEANS-JUSTIFICATION)
(INTERN-TABLE-OKP$-KNOWN-BOOLEANS-JUSTIFICATION)
(ADDRESSP$-KNOWN-BOOLEANS-JUSTIFICATION)
(ADDRESS-OR-NULLP$-KNOWN-BOOLEANS-JUSTIFICATION)
(NULL-REFP$-KNOWN-BOOLEANS-JUSTIFICATION)
(BOUND-IN-CLASS-TABLEP$-KNOWN-BOOLEANS-JUSTIFICATION)
(JAVA-BOOLEANP$-KNOWN-BOOLEANS-JUSTIFICATION)
(JAVA-BYTEP$-KNOWN-BOOLEANS-JUSTIFICATION)
(JAVA-SHORTP$-KNOWN-BOOLEANS-JUSTIFICATION)
(JAVA-CHARP$-KNOWN-BOOLEANS-JUSTIFICATION)
(JAVA-INTP$-KNOWN-BOOLEANS-JUSTIFICATION)
(JAVA-LONGP$-KNOWN-BOOLEANS-JUSTIFICATION)
(JAVA-BOOLEAN-AS-INT-P$-KNOWN-BOOLEANS-JUSTIFICATION)
(JAVA-BYTE-AS-INT-P$-KNOWN-BOOLEANS-JUSTIFICATION)
(JAVA-SHORT-AS-INT-P$-KNOWN-BOOLEANS-JUSTIFICATION)
(JAVA-CHAR-AS-INT-P$-KNOWN-BOOLEANS-JUSTIFICATION)
(JAVA-FLOATP$-KNOWN-BOOLEANS-JUSTIFICATION)
(JAVA-DOUBLEP$-KNOWN-BOOLEANS-JUSTIFICATION)
(HEAPP$-KNOWN-BOOLEANS-JUSTIFICATION)
(INTERN-TABLEP$-KNOWN-BOOLEANS-JUSTIFICATION)
(JVM-STATEP$-KNOWN-BOOLEANS-JUSTIFICATION)
(TYPE-IMPLEMENTSP$-KNOWN-BOOLEANS-JUSTIFICATION)
(JVM::OPERAND-STACK-SIZE-OF-NIL)
(S-DIFF-S-AXE
 (32 6 (:REWRITE S-SAME-G-STRONG))
 (12 6 (:REWRITE G-WHEN-NOT-IN-RKEYS-CHEAP))
 (10 5 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (6 6 (:TYPE-PRESCRIPTION SET::IN-TYPE))
 (6 2 (:REWRITE G-OF-S-REDUX))
 (5 5 (:TYPE-PRESCRIPTION BOOLEANP))
 (5 5 (:REWRITE CLR-DIFFERENTIAL))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 )
(SET-FIELD-OF-SET-FIELD-REORDER
 (2 1 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE CLR-DIFFERENTIAL))
 )
(SET-FIELD-OF-SET-FIELD-REORDER-PAIRS
 (2 1 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE SET-FIELD-OF-SET-FIELD-DIFF-1))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE CLR-DIFFERENTIAL))
 )
(SET-STATIC-FIELD-OF-SET-STATIC-FIELD-DIFF-CLASS-AXE)
(SET-STATIC-FIELD-OF-SET-STATIC-FIELD-DIFF-FIELD-AXE)
(RUN-N-STEPS-OPENER-AXE
 (195 13 (:REWRITE ZP-OPEN))
 (178 10 (:REWRITE RUN-N-STEPS-ZP))
 (20 20 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-CONSP-CHEAP))
 (20 20 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-ASSOC-EQUAL-CHEAP))
 (19 19 (:REWRITE USE-ALL-<=-2))
 (19 19 (:REWRITE USE-ALL-<=))
 (19 19 (:REWRITE USE-ALL-<-2))
 (19 19 (:REWRITE USE-ALL-<))
 (19 19 (:REWRITE DEFAULT-<-2))
 (19 19 (:REWRITE DEFAULT-<-1))
 (19 19 (:REWRITE BOUND-WHEN-USB))
 (19 19 (:REWRITE ARRAY-DIM-BOUND))
 (19 19 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (11 11 (:REWRITE DEFAULT-+-2))
 (11 11 (:REWRITE DEFAULT-+-1))
 (9 3 (:REWRITE FOLD-CONSTS-IN-+))
 (2 1 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE CLR-DIFFERENTIAL))
 )
(SYMBOLIC-EXECUTION-RULES-FOR-RUN-N-STEPS)
(TH-REWRITE)
(RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-BASE-AXE
 (6 1 (:REWRITE DEFAULT-<-2))
 (3 1 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (2 1 (:REWRITE DEFAULT-<-1))
 (1 1 (:REWRITE USE-ALL-RATIONALP-2))
 (1 1 (:REWRITE USE-ALL-RATIONALP))
 (1 1 (:REWRITE USE-ALL-<=-2))
 (1 1 (:REWRITE USE-ALL-<=))
 (1 1 (:REWRITE USE-ALL-<-2))
 (1 1 (:REWRITE USE-ALL-<))
 (1 1 (:REWRITE BOUND-WHEN-USB))
 (1 1 (:REWRITE ARRAY-DIM-BOUND))
 (1 1 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (1 1 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 )
(RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-OPENER-FAST-AXE)
(RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-OPENER-AXE
 (44 4 (:REWRITE RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-BASE))
 (36 2 (:DEFINITION RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-DEF))
 (25 5 (:REWRITE DEFAULT-<-2))
 (12 4 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (10 5 (:REWRITE DEFAULT-<-1))
 (5 5 (:REWRITE USE-ALL-<-2))
 (5 5 (:REWRITE USE-ALL-<))
 (5 5 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (4 4 (:REWRITE USE-ALL-RATIONALP-2))
 (4 4 (:REWRITE USE-ALL-RATIONALP))
 (4 4 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-ASSOC-EQUAL-CHEAP))
 (4 4 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (4 4 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:TYPE-PRESCRIPTION STACK-HEIGHT-LESS-THAN))
 (2 2 (:REWRITE USE-ALL-<=-2))
 (2 2 (:REWRITE USE-ALL-<=))
 (2 2 (:REWRITE BOUND-WHEN-USB))
 (2 2 (:REWRITE ARRAY-DIM-BOUND))
 )
(RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-OF-MYIF-AXE
 (126 8 (:REWRITE RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-BASE))
 (76 4 (:DEFINITION RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-DEF))
 (32 12 (:REWRITE DEFAULT-<-1))
 (22 12 (:REWRITE DEFAULT-<-2))
 (14 4 (:REWRITE CALL-STACK-OF-IF))
 (12 12 (:REWRITE USE-ALL-<-2))
 (12 12 (:REWRITE USE-ALL-<))
 (12 12 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (12 6 (:REWRITE DEFAULT-+-2))
 (8 8 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-ASSOC-EQUAL-CHEAP))
 (8 4 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (6 6 (:REWRITE DEFAULT-+-1))
 (6 2 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (5 5 (:REWRITE USE-ALL-<=-2))
 (5 5 (:REWRITE USE-ALL-<=))
 (5 5 (:REWRITE BOUND-WHEN-USB))
 (5 5 (:REWRITE ARRAY-DIM-BOUND))
 (4 4 (:TYPE-PRESCRIPTION STACK-HEIGHT-LESS-THAN))
 (4 4 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (4 4 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (4 4 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (4 4 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (4 4 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (4 4 (:REWRITE CLR-DIFFERENTIAL))
 (2 2 (:TYPE-PRESCRIPTION BOOLEANP))
 (2 2 (:REWRITE USE-ALL-RATIONALP-2))
 (2 2 (:REWRITE USE-ALL-RATIONALP))
 (2 2 (:REWRITE JVM::NOT-EQUAL-OF-CALL-STACK-SIZE-AND-CONSTANT-WHEN-NEGATIVE))
 (2 2 (:REWRITE JVM::EQUAL-OF-+-OF-CALL-STACK-SIZE-COMBINE-CONSTANTS))
 (2 2 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (2 2 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (1 1 (:REWRITE STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-DOES-NOTHING-2))
 (1 1 (:REWRITE STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-DOES-NOTHING-1))
 (1 1 (:REWRITE STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-BECOMES-STEP))
 )
(RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-OF-MYIF-ALT-AXE
 (133 8 (:REWRITE RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-BASE))
 (80 4 (:DEFINITION RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-DEF))
 (32 12 (:REWRITE DEFAULT-<-1))
 (22 12 (:REWRITE DEFAULT-<-2))
 (14 4 (:REWRITE CALL-STACK-OF-IF))
 (12 12 (:REWRITE USE-ALL-<-2))
 (12 12 (:REWRITE USE-ALL-<))
 (12 12 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (12 12 (:REWRITE <-OF-+-OF-1-STRENGTHEN))
 (12 6 (:REWRITE DEFAULT-+-2))
 (8 8 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-CONSP-CHEAP))
 (8 8 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-ASSOC-EQUAL-CHEAP))
 (8 4 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (6 6 (:REWRITE DEFAULT-+-1))
 (6 2 (:REWRITE RATIONALP-IMPLIES-ACL2-NUMBERP))
 (5 5 (:REWRITE USE-ALL-<=-2))
 (5 5 (:REWRITE USE-ALL-<=))
 (5 5 (:REWRITE BOUND-WHEN-USB))
 (5 5 (:REWRITE ARRAY-DIM-BOUND))
 (4 4 (:TYPE-PRESCRIPTION STACK-HEIGHT-LESS-THAN))
 (4 4 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (4 4 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (4 4 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (4 4 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (4 4 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (4 4 (:REWRITE CLR-DIFFERENTIAL))
 (2 2 (:TYPE-PRESCRIPTION BOOLEANP))
 (2 2 (:REWRITE USE-ALL-RATIONALP-2))
 (2 2 (:REWRITE USE-ALL-RATIONALP))
 (2 2 (:REWRITE JVM::NOT-EQUAL-OF-CALL-STACK-SIZE-AND-CONSTANT-WHEN-NEGATIVE))
 (2 2 (:REWRITE JVM::EQUAL-OF-+-OF-CALL-STACK-SIZE-COMBINE-CONSTANTS))
 (2 2 (:REWRITE ACL2-NUMBERP-WHEN-UNSIGNED-BYTE-P))
 (2 2 (:REWRITE ACL2-NUMBERP-FROM-UNSIGNED-BYTE-P-SIZE-PARAM))
 (1 1 (:REWRITE STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-DOES-NOTHING-2))
 (1 1 (:REWRITE STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-DOES-NOTHING-1))
 (1 1 (:REWRITE STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-BECOMES-STEP))
 )
(RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-OF-MYIF-AXE-SPLIT-1
 (90 6 (:REWRITE RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-BASE))
 (51 3 (:DEFINITION RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-DEF))
 (30 30 (:TYPE-PRESCRIPTION STACK-HEIGHT))
 (27 27 (:TYPE-PRESCRIPTION JVM::CALL-STACK-SIZE))
 (17 17 (:TYPE-PRESCRIPTION MYIF))
 (12 6 (:REWRITE DEFAULT-<-2))
 (12 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE USE-ALL-<-2))
 (6 6 (:REWRITE USE-ALL-<))
 (6 6 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (6 3 (:REWRITE DEFAULT-+-2))
 (3 3 (:TYPE-PRESCRIPTION STACK-HEIGHT-LESS-THAN))
 (3 3 (:REWRITE DEFAULT-+-1))
 (2 2 (:REWRITE MYIF-WHEN-NOT-NIL))
 (2 2 (:REWRITE MYIF-WHEN-NIL))
 (2 2 (:REWRITE MYIF-OF-CONSTANT-WHEN-NOT-NIL))
 (2 1 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE CLR-DIFFERENTIAL))
 )
(RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-OF-MYIF-AXE-SPLIT-2
 (90 6 (:REWRITE RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-BASE))
 (51 3 (:DEFINITION RUN-UNTIL-RETURN-FROM-STACK-HEIGHT-DEF))
 (30 30 (:TYPE-PRESCRIPTION STACK-HEIGHT))
 (27 27 (:TYPE-PRESCRIPTION JVM::CALL-STACK-SIZE))
 (17 17 (:TYPE-PRESCRIPTION MYIF))
 (12 6 (:REWRITE DEFAULT-<-2))
 (12 6 (:REWRITE DEFAULT-<-1))
 (6 6 (:REWRITE USE-ALL-<-2))
 (6 6 (:REWRITE USE-ALL-<))
 (6 6 (:REWRITE <-WHEN-BOUNDED-DARG-LISTP-GEN))
 (6 3 (:REWRITE DEFAULT-+-2))
 (3 3 (:TYPE-PRESCRIPTION STACK-HEIGHT-LESS-THAN))
 (3 3 (:REWRITE DEFAULT-+-1))
 (2 2 (:REWRITE MYIF-WHEN-NOT-NIL))
 (2 2 (:REWRITE MYIF-WHEN-NIL))
 (2 2 (:REWRITE MYIF-OF-CONSTANT-WHEN-NOT-NIL))
 (2 1 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE CLR-DIFFERENTIAL))
 )
(STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-BECOMES-STEP-AXE
 (4 4 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-CONSP-CHEAP))
 (4 4 (:REWRITE LOOKUP-EQUAL-WHEN-NOT-ASSOC-EQUAL-CHEAP))
 (1 1 (:REWRITE STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-DOES-NOTHING-2))
 (1 1 (:REWRITE STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-DOES-NOTHING-1))
 (1 1 (:REWRITE STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-BECOMES-STEP))
 )
(STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-DOES-NOTHING-1-AXE
 (2 1 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (1 1 (:TYPE-PRESCRIPTION BOOLEANP))
 (1 1 (:REWRITE STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-DOES-NOTHING-2))
 (1 1 (:REWRITE STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-DOES-NOTHING-1))
 (1 1 (:REWRITE STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-BECOMES-STEP))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (1 1 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (1 1 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (1 1 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (1 1 (:REWRITE CLR-DIFFERENTIAL))
 )
(STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-DOES-NOTHING-2-AXE
 (4 2 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (2 2 (:TYPE-PRESCRIPTION BOOLEANP))
 (2 2 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (2 2 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (2 2 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (2 2 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (2 2 (:REWRITE CLR-DIFFERENTIAL))
 (1 1 (:REWRITE STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-DOES-NOTHING-2))
 (1 1 (:REWRITE STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-DOES-NOTHING-1))
 (1 1 (:REWRITE STEP-STATE-WITH-PC-AND-CALL-STACK-HEIGHT-BECOMES-STEP))
 (1 1 (:REWRITE JVM::NOT-EQUAL-OF-CALL-STACK-SIZE-AND-CONSTANT-WHEN-NEGATIVE))
 )
(NOT-EQUAL-NIL-WHEN-INTEGERP)
(ADDRESS-OR-NULLP-WHEN-ADDRESSP-FREE)
(NOT-NULL-REFP-WHEN-ADDRESSP-FREE)
(ADDRESSP-WHEN-ADDRESS-OR-NULLP-FREE
 (2 2 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER-ALT))
 (2 2 (:REWRITE REFS-DIFFER-WHEN-ARRAY-DIMENSIONS-DIFFER))
 (2 2 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CDR-WRONG))
 (2 2 (:REWRITE JVM::NOT-EQUAL-CONSTANT-WHEN-CAR-WRONG))
 (2 2 (:REWRITE EQUAL-OF-BOOLEANS-CHEAP))
 (2 2 (:REWRITE EQUAL-CONSTANT-WHEN-BVCHOP-EQUAL-CONSTANT-FALSE))
 (2 2 (:REWRITE CLR-DIFFERENTIAL))
 (2 2 (:REWRITE ADDRESSP-WHEN-ARRAY-REFP))
 (2 2 (:REWRITE ADDRESSP-WHEN-ARRAY-REF-LISTP-AND-MEMBERP))
 (2 2 (:REWRITE ADDRESS-OR-NULLP-WHEN-ARRAY-REFP))
 (1 1 (:REWRITE USE-ALL-ADDRESSP-2))
 (1 1 (:REWRITE USE-ALL-ADDRESSP))
 (1 1 (:REWRITE ADDRESSP-WHEN-IN-DOMAIN-OF-HEAPP))
 )
(JVM::PC$NOT-NORMALIZED)
(JVM::PC-CONSTANT-OPENER)
(JVM::LOCALS$NOT-NORMALIZED)
(JVM::LOCALS-CONSTANT-OPENER)
(JVM::STACK$NOT-NORMALIZED)
(JVM::STACK-CONSTANT-OPENER)
(JVM::LOCKED-OBJECT$NOT-NORMALIZED)
(JVM::LOCKED-OBJECT-CONSTANT-OPENER)
(JVM::METHOD-INFO$NOT-NORMALIZED)
(JVM::METHOD-INFO-CONSTANT-OPENER)
(JVM::METHOD-DESIGNATOR$NOT-NORMALIZED)
(JVM::METHOD-DESIGNATOR-CONSTANT-OPENER)
(JVM::CUR-CLASS-NAME$NOT-NORMALIZED)
(JVM::CUR-CLASS-NAME-CONSTANT-OPENER)
(JVM::CUR-METHOD-NAME$NOT-NORMALIZED)
(JVM::CUR-METHOD-NAME-CONSTANT-OPENER)
(JVM::CUR-METHOD-DESCRIPTOR$NOT-NORMALIZED)
(JVM::CUR-METHOD-DESCRIPTOR-CONSTANT-OPENER)
(JVM::METHOD-PROGRAM$NOT-NORMALIZED)
(JVM::METHOD-PROGRAM-CONSTANT-OPENER)
(JVM::JAVA-FLOATP$NOT-NORMALIZED)
(JVM::JAVA-FLOATP-CONSTANT-OPENER)
(JVM::FLOAT-SIGNP$NOT-NORMALIZED)
(JVM::FLOAT-SIGNP-CONSTANT-OPENER)
(JVM::MAKE-REGULAR-FLOAT$NOT-NORMALIZED)
(JVM::MAKE-REGULAR-FLOAT-CONSTANT-OPENER)
(JVM::FLOAT<$NOT-NORMALIZED)
(JVM::FLOAT<-CONSTANT-OPENER)
(JVM::FLOAT=$NOT-NORMALIZED)
(JVM::FLOAT=-CONSTANT-OPENER)
(JVM::REGULAR-FLOAT-VALUE$NOT-NORMALIZED)
(JVM::REGULAR-FLOAT-VALUE-CONSTANT-OPENER)
(JVM::FCMPL$NOT-NORMALIZED)
(JVM::FCMPL-CONSTANT-OPENER)
(JVM::REGULAR-FLOATP$NOT-NORMALIZED)
(JVM::REGULAR-FLOATP-CONSTANT-OPENER)
(JVM::FIELD-ID-TYPE$NOT-NORMALIZED)
(JVM::FIELD-ID-TYPE-CONSTANT-OPENER)
(JVM::FIELD-PUBLICP$NOT-NORMALIZED)
(JVM::FIELD-PUBLICP-CONSTANT-OPENER)
(JVM::FIELD-PRIVATEP$NOT-NORMALIZED)
(JVM::FIELD-PRIVATEP-CONSTANT-OPENER)
(JVM::FIELD-PROTECTEDP$NOT-NORMALIZED)
(JVM::FIELD-PROTECTEDP-CONSTANT-OPENER)
(JVM::FIELD-STATICP$NOT-NORMALIZED)
(JVM::FIELD-STATICP-CONSTANT-OPENER)
(JVM::FIELD-ACCESS-FLAGS$NOT-NORMALIZED)
(JVM::FIELD-ACCESS-FLAGS-CONSTANT-OPENER)
(JVM::METHOD-PUBLICP$NOT-NORMALIZED)
(JVM::METHOD-PUBLICP-CONSTANT-OPENER)
(JVM::METHOD-PRIVATEP$NOT-NORMALIZED)
(JVM::METHOD-PRIVATEP-CONSTANT-OPENER)
(JVM::METHOD-PROTECTEDP$NOT-NORMALIZED)
(JVM::METHOD-PROTECTEDP-CONSTANT-OPENER)
(JVM::METHOD-STATICP$NOT-NORMALIZED)
(JVM::METHOD-STATICP-CONSTANT-OPENER)
(JVM::METHOD-NATIVEP$NOT-NORMALIZED)
(JVM::METHOD-NATIVEP-CONSTANT-OPENER)
(JVM::METHOD-ABSTRACTP$NOT-NORMALIZED)
(JVM::METHOD-ABSTRACTP-CONSTANT-OPENER)
(JVM::METHOD-SYNCHRONIZEDP$NOT-NORMALIZED)
(JVM::METHOD-SYNCHRONIZEDP-CONSTANT-OPENER)
(JVM::METHOD-ACCESS-FLAGS$NOT-NORMALIZED)
(JVM::METHOD-ACCESS-FLAGS-CONSTANT-OPENER)
(JVM::ANY-LESS-THAN-ZERO$NOT-NORMALIZED)
(JVM::ANY-LESS-THAN-ZERO-CONSTANT-OPENER)
(JVM::NTH-LOCAL$NOT-NORMALIZED)
(JVM::NTH-LOCAL-CONSTANT-OPENER)
(JVM::UPDATE-NTH-LOCAL$NOT-NORMALIZED)
(JVM::UPDATE-NTH-LOCAL-CONSTANT-OPENER)
(JVM::ARRAY-TYPEP$NOT-NORMALIZED)
(JVM::REFERENCE-TYPEP$NOT-NORMALIZED)
(JVM::TYPEP$NOT-NORMALIZED)
(JVM::TYPEP-CONSTANT-OPENER)
(JVM::ARRAY-TYPEP$NOT-NORMALIZED)
(JVM::REFERENCE-TYPEP$NOT-NORMALIZED)
(JVM::TYPEP$NOT-NORMALIZED)
(JVM::ARRAY-TYPEP-CONSTANT-OPENER)
(JVM::CLASS-OR-INTERFACE-NAMEP$NOT-NORMALIZED)
(JVM::CLASS-OR-INTERFACE-NAMEP-CONSTANT-OPENER)
(JVM::PRIMITIVE-TYPEP$NOT-NORMALIZED)
(JVM::PRIMITIVE-TYPEP-CONSTANT-OPENER)
(JVM::CLASS-NAMEP$NOT-NORMALIZED)
(JVM::CLASS-NAMEP-CONSTANT-OPENER)
(JVM::FIELD-NAMEP$NOT-NORMALIZED)
(JVM::FIELD-NAMEP-CONSTANT-OPENER)
(JVM::FIELD-IDP$NOT-NORMALIZED)
(JVM::FIELD-IDP-CONSTANT-OPENER)
(JVM::LOOKUP-METHOD-IN-CLASS-INFO$NOT-NORMALIZED)
(JVM::LOOKUP-METHOD-IN-CLASS-INFO-CONSTANT-OPENER)
(JVM::EXTRACT-PACKAGE-NAME-FROM-CLASS-NAME$NOT-NORMALIZED)
(JVM::EXTRACT-PACKAGE-NAME-FROM-CLASS-NAME-CONSTANT-OPENER)
(STRING-CONTAINS-CHARP$NOT-NORMALIZED)
(STRING-CONTAINS-CHARP-CONSTANT-OPENER)
(POSITION-EQUAL$NOT-NORMALIZED)
(POSITION-EQUAL-CONSTANT-OPENER)
(POSITION-EQUAL-AC$NOT-NORMALIZED)
(POSITION-EQUAL-AC-CONSTANT-OPENER)
(SUBSTRING-BEFORE-LAST-OCCURRENCE$NOT-NORMALIZED)
(SUBSTRING-BEFORE-LAST-OCCURRENCE-CONSTANT-OPENER)
(COMMON-LISP::REVERSE$NOT-NORMALIZED)
(COMMON-LISP::REVERSE-CONSTANT-OPENER)
(COMMON-LISP::REVAPPEND$NOT-NORMALIZED)
(COMMON-LISP::REVAPPEND-CONSTANT-OPENER)
(SUBSTRING-AFTER-TERMINATOR$NOT-NORMALIZED)
(SUBSTRING-AFTER-TERMINATOR-CONSTANT-OPENER)
(READTHROUGHTERMINATOR-AUX$NOT-NORMALIZED)
(READTHROUGHTERMINATOR-AUX-CONSTANT-OPENER)
(JVM::BOUND-IN-CLASS-TABLEP$NOT-NORMALIZED)
(JVM::BOUND-IN-CLASS-TABLEP-CONSTANT-OPENER)
(JVM::BINDING$NOT-NORMALIZED)
(JVM::BINDING-CONSTANT-OPENER)
(JVM::BIND$NOT-NORMALIZED)
(JVM::BIND-CONSTANT-OPENER)
(JVM::LOOKUP-METHOD-IN-CLASSES$NOT-NORMALIZED)
(JVM::LOOKUP-METHOD-IN-CLASSES-CONSTANT-OPENER)
(JVM::INITIALIZE-ONE-DIM-ARRAY$NOT-NORMALIZED)
(JVM::INITIALIZE-ONE-DIM-ARRAY-CONSTANT-OPENER)
(JVM::MAKE-FRAME$NOT-NORMALIZED)
(JVM::MAKE-FRAME-CONSTANT-OPENER)
(JVM::COUNT-SLOTS-IN-TYPES$NOT-NORMALIZED)
(JVM::COUNT-SLOTS-IN-TYPES-CONSTANT-OPENER)
(JVM::TYPE-SLOT-COUNT$NOT-NORMALIZED)
(JVM::TYPE-SLOT-COUNT-CONSTANT-OPENER)
(JVM::SET-STATIC-FIELD$NOT-NORMALIZED)
(JVM::SET-STATIC-FIELD-CONSTANT-OPENER)
(JVM::GET-STATIC-FIELD$NOT-NORMALIZED)
(JVM::GET-STATIC-FIELD-CONSTANT-OPENER)
(SET-FIELD$NOT-NORMALIZED)
(SET-FIELD-CONSTANT-OPENER)
(GET-FIELD$NOT-NORMALIZED)
(GET-FIELD-CONSTANT-OPENER)
(JVM::GET-ARRAY-COMPONENT-TYPE$NOT-NORMALIZED)
(JVM::GET-ARRAY-COMPONENT-TYPE-CONSTANT-OPENER)
(GEN-INIT-BINDINGS-FOR-CLASS$NOT-NORMALIZED)
(GEN-INIT-BINDINGS-FOR-CLASS-CONSTANT-OPENER)
(ALISTP$NOT-NORMALIZED)
(ALISTP-CONSTANT-OPENER)
(NEW-AD$NOT-NORMALIZED)
(NEW-AD-CONSTANT-OPENER)
(NEW-AD-AUX$NOT-NORMALIZED)
(NEW-AD-AUX-CONSTANT-OPENER)
(NTH-NEW-AD$NOT-NORMALIZED)
(NTH-NEW-AD-CONSTANT-OPENER)
(N-NEW-ADS2$NOT-NORMALIZED)
(N-NEW-ADS2-CONSTANT-OPENER)
(SET::DELETE$NOT-NORMALIZED)
(SET::DELETE-CONSTANT-OPENER)
(SET::TAIL$NOT-NORMALIZED)
(SET::TAIL-CONSTANT-OPENER)
(SET::HEAD$NOT-NORMALIZED)
(SET::HEAD-CONSTANT-OPENER)
(SET::EMPTY$NOT-NORMALIZED)
(SET::EMPTY-CONSTANT-OPENER)
(SET::SFIX$NOT-NORMALIZED)
(SET::SFIX-CONSTANT-OPENER)
(SET::SETP$NOT-NORMALIZED)
(SET::SETP-CONSTANT-OPENER)
(FAST-<<$NOT-NORMALIZED)
(FAST-<<-CONSTANT-OPENER)
(BOOLEANP-OF-ARRAY-REFP)
(BOOLEANP-OF-ARRAY-REF-LISTP)
