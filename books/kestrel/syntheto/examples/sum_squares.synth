function sum_squares(n: int) assumes n >= 0 returns (sum: int) ensures sum >= 0 {
  if(n == 0) {
    return 0;
    }
  else {
  return n * n + sum_squares(n - 1);
  }
}

function sum_squares_1 =
  transform sum_squares
    by tail_recursion {new_parameter_name = result}

function sum_squares_2 =
  transform sum_squares
    by finite_difference {expression = n * n,
                          new_parameter_name = n_sq,
                          simplify = true}

function sum_squares_3 =
  transform sum_squares_1
    by finite_difference {expression = n * n,
                          new_parameter_name = n_sq,
                          simplify = false}
