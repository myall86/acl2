(%%SUB1-INDUCTION)
(%%AND-TREE-FN)
(%%P0-AUX)
(%%P0)
(%%P0-NECC)
(%%P0-IMPLIES-%%P0-AUX)
(%%P0-PROPERTY-LEMMA)
(%%P0-PROPERTY)
(OUT2$-IS-OUT2$-BASE
 (1 1 (:REWRITE ZP-OPEN))
 )
(OUT1$-IS-OUT1$-BASE
 (56 8 (:REWRITE IF1-NON-0))
 (32 4 (:REWRITE EQUAL-LOG=-0))
 (24 24 (:TYPE-PRESCRIPTION BVECP$SEL))
 (16 16 (:TYPE-PRESCRIPTION LOG=-NONNEGATIVE-INTEGER-TYPE))
 (16 4 (:REWRITE BVECP-BITN-0))
 (11 11 (:REWRITE BVECP-MONOTONE))
 (5 2 (:REWRITE LOG=-1-REWRITE))
 (5 2 (:REWRITE LOG=-0-REWRITE))
 (1 1 (:REWRITE ZP-OPEN))
 )
(%%P0-BASE
 (2 1 (:REWRITE %%P0-IMPLIES-%%P0-AUX))
 )
(OUT2$-IS-OUT2$-INDUCTION_STEP
 (7 5 (:REWRITE DEFAULT-+-2))
 (6 5 (:REWRITE DEFAULT-+-1))
 (4 4 (:REWRITE BVECP-MONOTONE))
 (3 3 (:TYPE-PRESCRIPTION BVECP$WW))
 (2 2 (:REWRITE BITS-WITH-INDICES-IN-THE-WRONG-ORDER))
 )
(OUT1$-IS-OUT1$-INDUCTION_STEP
 (104 8 (:REWRITE IF1-NON-0))
 (64 8 (:REWRITE EQUAL-LOG=-0))
 (48 48 (:TYPE-PRESCRIPTION BVECP$SEL))
 (32 32 (:TYPE-PRESCRIPTION LOG=-NONNEGATIVE-INTEGER-TYPE))
 (24 8 (:DEFINITION NOT))
 (16 4 (:REWRITE BVECP-BITN-0))
 (13 13 (:REWRITE BVECP-MONOTONE))
 (8 2 (:REWRITE LOG=-1-REWRITE))
 (8 2 (:REWRITE LOG=-0-REWRITE))
 )
(%%P0-INDUCTION_STEP
 (2 1 (:REWRITE %%P0-IMPLIES-%%P0-AUX))
 )
(%%P0-HOLDS)
(OUT2$-IS-OUT2$)
(OUT1$-IS-OUT1$)
